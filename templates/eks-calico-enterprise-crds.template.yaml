AWSTemplateFormatVersion: "2010-09-09"
Description: Calico Enterprise Custom Resource Definitions
Metadata:
  QuickStartDocumentation:
    EntrypointName: "Installs the Calico Enterprise CRDs"
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Calico Enterprise CRDs
        Parameters:
          - KubeClusterName
    ParameterLabels:
      KubeClusterName:
        default: EKS cluster name
Parameters:
  KubeClusterName:
    Type: String
    Description: Name of the EKS cluster in which to deploy Calico.

Resources:
  #####################################################################################
  # CRDs for Calico Enterprise only. These are not needed for standard Calico
  #####################################################################################
  GlobalAlertsCRD:
    Type: "Custom::KubeManifest"
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: (devel)
          name: globalalerts.crd.projectcalico.org
        spec:
          group: crd.projectcalico.org
          names:
            kind: GlobalAlert
            listKind: GlobalAlertList
            plural: globalalerts
            singular: globalalert
          scope: Cluster
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    properties:
                      aggregateBy:
                        items:
                          type: string
                        type: array
                      condition:
                        type: string
                      dataSet:
                        type: string
                      description:
                        type: string
                      field:
                        type: string
                      lookback:
                        type: string
                      metric:
                        type: string
                      period:
                        type: string
                      query:
                        type: string
                      severity:
                        type: integer
                      summary:
                        type: string
                      threshold:
                        type: number
                    required:
                    - dataSet
                    - description
                    - severity
                    type: object
                  status:
                    properties:
                      active:
                        type: boolean
                      errorConditions:
                        items:
                          properties:
                            message:
                              type: string
                            type:
                              type: string
                          required:
                          - message
                          - type
                          type: object
                        type: array
                      executionState:
                        type: string
                      healthy:
                        type: boolean
                      lastEvent:
                        format: date-time
                        type: string
                      lastExecuted:
                        format: date-time
                        type: string
                      lastUpdate:
                        format: date-time
                        type: string
                    required:
                    - active
                    - healthy
                    type: object
                type: object
            served: true
            storage: true
        status:
          acceptedNames:
            kind: ""
            plural: ""
          conditions: []
          storedVersions: []

  GlobalAlertTemplatesCRD:
    Type: "Custom::KubeManifest"
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: (devel)
          name: globalalerttemplates.crd.projectcalico.org
        spec:
          group: crd.projectcalico.org
          names:
            kind: GlobalAlertTemplate
            listKind: GlobalAlertTemplateList
            plural: globalalerttemplates
            singular: globalalerttemplate
          scope: Cluster
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    properties:
                      aggregateBy:
                        items:
                          type: string
                        type: array
                      condition:
                        type: string
                      dataSet:
                        type: string
                      description:
                        type: string
                      field:
                        type: string
                      lookback:
                        type: string
                      metric:
                        type: string
                      period:
                        type: string
                      query:
                        type: string
                      severity:
                        type: integer
                      summary:
                        type: string
                      threshold:
                        type: number
                    required:
                    - dataSet
                    - description
                    - severity
                    type: object
                type: object
            served: true
            storage: true
        status:
          acceptedNames:
            kind: ""
            plural: ""
          conditions: []
          storedVersions: []

  GlobalReportsCRD:
    Type: "Custom::KubeManifest"
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: (devel)
          name: globalreports.crd.projectcalico.org
        spec:
          group: crd.projectcalico.org
          names:
            kind: GlobalReport
            listKind: GlobalReportList
            plural: globalreports
            singular: globalreport
          scope: Cluster
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: ReportSpec contains the values of the GlobalReport.
                    properties:
                      cis:
                        description: This field contain all the parameters for configuring
                          a CIS benchmark report.
                        properties:
                          highThreshold:
                            description: Interpretted as a percentage to indicate at what
                              levels of passing tests a node should be considered HIGH, MED,
                              and LOW. - If >= HighThreshold flag as high - Otherwise, if
                              > MedThreshold flag as med - Otherwise flag as low.
                            type: integer
                          includeUnscoredTests:
                            description: Specifies if the report should also show results
                              for scored/not-scored tests.
                            type: boolean
                          medThreshold:
                            type: integer
                          numFailedTests:
                            description: Configure the number of top failed tests to show
                              up on the report.
                            type: integer
                          resultsFilters:
                            description: Benchmark results filters. The first matching set
                              of filters is applied to each set of benchmark results. If there
                              are no matching filters, the full set of benchmark results will
                              be included in the report.
                            items:
                              description: CISBenchmarkFilter provides filters for a set of
                                benchmarks that match particular selection criteria.
                              properties:
                                benchmarkSelection:
                                  description: BenchmarkSelection specifies which benchmarks
                                    this filter applies to. If not specified, applies to all.
                                  properties:
                                    kubernetesVersion:
                                      description: KubernetesVersion is used select nodes
                                        that are running a specific version of kubelet. The
                                        full version need not be fully specified down to the
                                        patch level, in which case the significant parts of
                                        the version are matched. e.g. "1.0" will match versions
                                        "1.0.1" and "1.0.2" If not specified, matches all
                                        versions.
                                      type: string
                                  type: object
                                exclude:
                                  description: Exclude is an array of test indices to exclude
                                    from the report.
                                  items:
                                    type: string
                                  type: array
                                include:
                                  description: Include is an array of test indices to show
                                    in the report. Is additive if IncludeUnscoredTests is
                                    true. Takes precedence over Exclude.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            type: array
                        type: object
                      endpoints:
                        description: Endpoints is used to specify which endpoints are in-scope
                          and stored in the generated report data. Only used if endpoints
                          data and/or audit logs are gathered in the report. If omitted, treated
                          as everything in-scope.
                        properties:
                          namespaces:
                            description: Namespace match restricts endpoint selection to those
                              in the selected namespaces.
                            properties:
                              names:
                                description: Names is an optional field that specifies a set
                                  of resources by name.
                                items:
                                  type: string
                                type: array
                              selector:
                                description: Selector is an optional field that selects a
                                  set of resources by label. If both Names and Selector are
                                  specified then they are AND'ed.
                                type: string
                            type: object
                          selector:
                            description: Selector, selects endpoints by endpoint labels. If
                              omitted, all endpoints are included in the report data.
                            type: string
                          serviceAccounts:
                            description: ServiceAccount match restricts endpoint selection
                              to those in the selected service accounts.
                            properties:
                              names:
                                description: Names is an optional field that specifies a set
                                  of resources by name.
                                items:
                                  type: string
                                type: array
                              selector:
                                description: Selector is an optional field that selects a
                                  set of resources by label. If both Names and Selector are
                                  specified then they are AND'ed.
                                type: string
                            type: object
                        type: object
                      jobNodeSelector:
                        additionalProperties:
                          type: string
                        description: The node selector used to specify which nodes the report
                          job may be scheduled on.
                        type: object
                      reportType:
                        description: The name of the report type.
                        type: string
                      schedule:
                        description: The report schedule specified in cron format. This specifies
                          both the start and end times of each report, where the end time
                          of one report becomes the start time of the next report. Separate
                          jobs are created to generate a report, and the job generates the
                          report data from archived audit and traffic data. To ensure this
                          data is actually archived, the jobs to generate each report starts
                          at a configurable time *after* the end time of the report that is
                          being generated. The default job start delay is 30m, but is configurable
                          through the compliance-controller environments. The cron format
                          has minute accuracy, but only up to two values may be configured
                          for the minute column which means you may only have at most two
                          reports for each hour period.
                        type: string
                      suspend:
                        description: This flag tells the controller to suspend subsequent
                          jobs for generating reports, it does not apply to already started
                          jobs. If jobs are resumed then the controller will start creating
                          jobs for any reports that were missed while the job was suspended.
                        type: boolean
                    required:
                    - reportType
                    type: object
                  status:
                    description: ReportStatus contains the status of the automated report
                      generation.
                    properties:
                      activeReportJobs:
                        description: The set of active report jobs.
                        items:
                          description: ReportJob contains
                          properties:
                            end:
                              description: The end time of the report.
                              format: date-time
                              type: string
                            job:
                              description: A reference to the report creation job if known.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object instead
                                    of an entire object, this string should contain a valid
                                    JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                    For example, if the object reference is to a container
                                    within a pod, this would take on a value like: "spec.containers{name}"
                                    (where "name" refers to the name of the container that
                                    triggered the event) or if no container name is specified
                                    "spec.containers[2]" (container with index 2 in this pod).
                                    This syntax is chosen only to have some well-defined way
                                    of referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change in the
                                    future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which this reference
                                    is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                            start:
                              description: The start time of the report.
                              format: date-time
                              type: string
                          required:
                          - end
                          - job
                          - start
                          type: object
                        type: array
                      lastFailedReportJobs:
                        description: The configured report jobs that have failed.
                        items:
                          description: CompletedReportJob augments the ReportJob with completion
                            details.
                          properties:
                            end:
                              description: The end time of the report.
                              format: date-time
                              type: string
                            job:
                              description: A reference to the report creation job if known.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object instead
                                    of an entire object, this string should contain a valid
                                    JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                    For example, if the object reference is to a container
                                    within a pod, this would take on a value like: "spec.containers{name}"
                                    (where "name" refers to the name of the container that
                                    triggered the event) or if no container name is specified
                                    "spec.containers[2]" (container with index 2 in this pod).
                                    This syntax is chosen only to have some well-defined way
                                    of referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change in the
                                    future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which this reference
                                    is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                            jobCompletionTime:
                              description: The time the report job completed.
                              format: date-time
                              type: string
                            start:
                              description: The start time of the report.
                              format: date-time
                              type: string
                          required:
                          - end
                          - job
                          - start
                          type: object
                        type: array
                      lastScheduledReportJob:
                        description: The last scheduled report job.
                        properties:
                          end:
                            description: The end time of the report.
                            format: date-time
                            type: string
                          job:
                            description: A reference to the report creation job if known.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description: 'If referring to a piece of an object instead
                                  of an entire object, this string should contain a valid
                                  JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                  For example, if the object reference is to a container within
                                  a pod, this would take on a value like: "spec.containers{name}"
                                  (where "name" refers to the name of the container that triggered
                                  the event) or if no container name is specified "spec.containers[2]"
                                  (container with index 2 in this pod). This syntax is chosen
                                  only to have some well-defined way of referencing a part
                                  of an object. TODO: this design is not final and this field
                                  is subject to change in the future.'
                                type: string
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              namespace:
                                description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                type: string
                              resourceVersion:
                                description: 'Specific resourceVersion to which this reference
                                  is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                type: string
                            type: object
                          start:
                            description: The start time of the report.
                            format: date-time
                            type: string
                        required:
                        - end
                        - job
                        - start
                        type: object
                      lastSuccessfulReportJobs:
                        description: The configured report jobs that have completed successfully.
                        items:
                          description: CompletedReportJob augments the ReportJob with completion
                            details.
                          properties:
                            end:
                              description: The end time of the report.
                              format: date-time
                              type: string
                            job:
                              description: A reference to the report creation job if known.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object instead
                                    of an entire object, this string should contain a valid
                                    JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                    For example, if the object reference is to a container
                                    within a pod, this would take on a value like: "spec.containers{name}"
                                    (where "name" refers to the name of the container that
                                    triggered the event) or if no container name is specified
                                    "spec.containers[2]" (container with index 2 in this pod).
                                    This syntax is chosen only to have some well-defined way
                                    of referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change in the
                                    future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which this reference
                                    is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                            jobCompletionTime:
                              description: The time the report job completed.
                              format: date-time
                              type: string
                            start:
                              description: The start time of the report.
                              format: date-time
                              type: string
                          required:
                          - end
                          - job
                          - start
                          type: object
                        type: array
                    type: object
                type: object
            served: true
            storage: true
        status:
          acceptedNames:
            kind: ""
            plural: ""
          conditions: []
          storedVersions: []

  GlobalReportTypesCRD:
    Type: "Custom::KubeManifest"
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: (devel)
          name: globalreporttypes.crd.projectcalico.org
        spec:
          group: crd.projectcalico.org
          names:
            kind: GlobalReportType
            listKind: GlobalReportTypeList
            plural: globalreporttypes
            singular: globalreporttype
          scope: Cluster
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: ReportTypeSpec contains the various templates, and configuration
                      used to render a specific type of report.
                    properties:
                      auditEventsSelection:
                        description: What audit log data should be included in the report.
                          If not specified, the report will contain no audit log data. The
                          selection may be further filtered by the Report.
                        properties:
                          resources:
                            description: Resources lists the resources that will be included
                              in the audit logs in the ReportData.  Blank fields in the listed
                              ResourceID structs are treated as wildcards.
                            items:
                              description: "AuditResource is used to filter Audit events in
                                the Report configuration. \n An empty field value indicates
                                a wildcard. For example, if Resource is set to \"networkpolicies\"
                                and all other fields are blank then this filter would include
                                all NetworkPolicy resources across all namespaces, and would
                                include both Calico and Kubernetes resource types."
                              properties:
                                apiGroup:
                                  description: APIGroup is the name of the API group that
                                    contains the referred object (e.g. projectcalico.org).
                                  type: string
                                apiVersion:
                                  description: APIVersion is the version of the API group
                                    that contains the referred object (e.g. v3).
                                  type: string
                                name:
                                  description: The resource name.
                                  type: string
                                namespace:
                                  description: The resource namespace.
                                  type: string
                                resource:
                                  description: The resource type. The format is the lowercase
                                    plural as used in audit event selection and RBAC configuration.
                                  type: string
                              type: object
                            type: array
                        type: object
                      downloadTemplates:
                        description: The set of templates used to render the report for downloads.
                        items:
                          description: ReportTemplate defines a template used to render a
                            report into downloadable or UI compatible format.
                          properties:
                            description:
                              description: A user-facing description of the template.
                              type: string
                            name:
                              description: The name of this template. This should be unique
                                across all template names within a ReportType. This will be
                                used by the UI as the suffix of the downloadable file name.
                              type: string
                            template:
                              description: The base-64 encoded go template used to render
                                the report data.
                              type: string
                          type: object
                        type: array
                      includeCISBenchmarkData:
                        description: Whether to include the full cis benchmark test results
                          in the report.
                        type: boolean
                      includeEndpointData:
                        description: Whether to include endpoint data in the report. The actual
                          endpoints included may be filtered by the Report, but will otherwise
                          contain the full set of endpoints.
                        type: boolean
                      includeEndpointFlowLogData:
                        description: Whether to include endpoint-to-endpoint flow log data
                          in the report.
                        type: boolean
                      uiSummaryTemplate:
                        description: The summary template, explicitly used by the UI to render
                          a summary version of the report. This should render to json containing
                          a sets of widgets that the UI can use to render the summary. The
                          rendered data is returned on the list query of the reports.
                        properties:
                          description:
                            description: A user-facing description of the template.
                            type: string
                          name:
                            description: The name of this template. This should be unique
                              across all template names within a ReportType. This will be
                              used by the UI as the suffix of the downloadable file name.
                            type: string
                          template:
                            description: The base-64 encoded go template used to render the
                              report data.
                            type: string
                        type: object
                    type: object
                type: object
            served: true
            storage: true
        status:
          acceptedNames:
            kind: ""
            plural: ""
          conditions: []
          storedVersions: []

  GlobalThreatFeedsCRD:
    Type: "Custom::KubeManifest"
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: (devel)
          name: globalthreatfeeds.crd.projectcalico.org
        spec:
          group: crd.projectcalico.org
          names:
            kind: GlobalThreatFeed
            listKind: GlobalThreatFeedList
            plural: globalthreatfeeds
            singular: globalthreatfeed
          scope: Cluster
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: GlobalThreatFeedSpec contains the specification of a GlobalThreatFeed
                      resource.
                    properties:
                      content:
                        description: Content describes the kind of data the data feed provides.
                        type: string
                      globalNetworkSet:
                        properties:
                          labels:
                            additionalProperties:
                              type: string
                            type: object
                        type: object
                      pull:
                        properties:
                          http:
                            properties:
                              format:
                                properties:
                                  csv:
                                    properties:
                                      columnDelimiter:
                                        type: string
                                      commentDelimiter:
                                        type: string
                                      disableRecordSizeValidation:
                                        type: boolean
                                      fieldName:
                                        type: string
                                      fieldNum:
                                        type: integer
                                      header:
                                        type: boolean
                                      recordSize:
                                        type: integer
                                    type: object
                                  json:
                                    properties:
                                      path:
                                        type: string
                                    type: object
                                  newlineDelimited:
                                    type: object
                                type: object
                              headers:
                                items:
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      type: string
                                    valueFrom:
                                      properties:
                                        configMapKeyRef:
                                          description: Selects a key of a ConfigMap.
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description: 'Name of the referent. More info:
                                                https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the ConfigMap or
                                                its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                        secretKeyRef:
                                          description: Selects a key of a secret in the pod's
                                            namespace
                                          properties:
                                            key:
                                              description: The key of the secret to select
                                                from.  Must be a valid secret key.
                                              type: string
                                            name:
                                              description: 'Name of the referent. More info:
                                                https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the Secret or its
                                                key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                              url:
                                type: string
                            required:
                            - url
                            type: object
                          period:
                            type: string
                        required:
                        - http
                        type: object
                    type: object
                  status:
                    properties:
                      errorConditions:
                        items:
                          properties:
                            message:
                              type: string
                            type:
                              type: string
                          required:
                          - message
                          - type
                          type: object
                        type: array
                      lastSuccessfulSearch:
                        format: date-time
                        type: string
                      lastSuccessfulSync:
                        format: date-time
                        type: string
                    required:
                    - errorConditions
                    - lastSuccessfulSearch
                    - lastSuccessfulSync
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
        status:
          acceptedNames:
            kind: ""
            plural: ""
          conditions: []
          storedVersions: []

  LicenseKeysCRD:
    Type: "Custom::KubeManifest"
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: (devel)
          name: licensekeys.crd.projectcalico.org
        spec:
          group: crd.projectcalico.org
          names:
            kind: LicenseKey
            listKind: LicenseKeyList
            plural: licensekeys
            singular: licensekey
          scope: Cluster
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: LicenseKeySpec contains the license key itself.
                    properties:
                      certificate:
                        description: Certificate is used to validate the token.
                        type: string
                      token:
                        description: Token is the JWT containing the license claims
                        type: string
                    required:
                    - token
                    type: object
                  status:
                    description: LicenseKeyStatus contains the license key information.
                    properties:
                      expiry:
                        description: Expiry is the expiry date of License
                        format: date-time
                        nullable: true
                        type: string
                      maxnodes:
                        description: Maximum Number of Allowed Nodes
                        type: integer
                    type: object
                type: object
            served: true
            storage: true
        status:
          acceptedNames:
            kind: ""
            plural: ""
          conditions: []
          storedVersions: []

  ManagedClustersCRD:
    Type: "Custom::KubeManifest"
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: (devel)
          name: managedclusters.crd.projectcalico.org
        spec:
          group: crd.projectcalico.org
          names:
            kind: ManagedCluster
            listKind: ManagedClusterList
            plural: managedclusters
            singular: managedcluster
          scope: Cluster
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: ManagedClusterSpec contains the specification of a ManagedCluster
                      resource.
                    properties:
                      installationManifest:
                        description: Field to store dynamically generated manifest for installing
                          component into the actual application cluster corresponding to this
                          Managed Cluster
                        type: string
                    type: object
                  status:
                    properties:
                      conditions:
                        items:
                          description: Condition contains various status information
                          properties:
                            message:
                              type: string
                            reason:
                              type: string
                            status:
                              type: string
                            type:
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                    type: object
                type: object
            served: true
            storage: true
        status:
          acceptedNames:
            kind: ""
            plural: ""
          conditions: []
          storedVersions: []

  RemoteClusterConfigurationsCRD:
    Type: "Custom::KubeManifest"
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: (devel)
          name: remoteclusterconfigurations.crd.projectcalico.org
        spec:
          group: crd.projectcalico.org
          names:
            kind: RemoteClusterConfiguration
            listKind: RemoteClusterConfigurationList
            plural: remoteclusterconfigurations
            singular: remoteclusterconfiguration
          scope: Cluster
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: RemoteClusterConfigurationSpec contains the values of describing
                      the cluster.
                    properties:
                      clusterAccessSecret:
                        description: Specifies a Secret to read for the RemoteClusterconfiguration.
                          If defined all datastore configuration in this struct will be cleared
                          and overwritten with the appropriate fields in the Secret.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead of
                              an entire object, this string should contain a valid JSON/Go
                              field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container within
                              a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that triggered
                              the event) or if no container name is specified "spec.containers[2]"
                              (container with index 2 in this pod). This syntax is chosen
                              only to have some well-defined way of referencing a part of
                              an object. TODO: this design is not final and this field is
                              subject to change in the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      datastoreType:
                        description: Indicates the datastore to use. If unspecified, defaults
                          to etcdv3
                        type: string
                      etcdCACert:
                        type: string
                      etcdCACertFile:
                        description: Path to the etcd Certificate Authority file. Valid if
                          DatastoreType is etcdv3.
                        type: string
                      etcdCert:
                        type: string
                      etcdCertFile:
                        description: Path to the etcd client certificate. Valid if DatastoreType
                          is etcdv3.
                        type: string
                      etcdEndpoints:
                        description: 'A comma separated list of etcd endpoints. Valid if DatastoreType
                          is etcdv3.  [Default: ]'
                        type: string
                      etcdKey:
                        description: These config file parameters are to support inline certificates,
                          keys and CA / Trusted certificate.
                        type: string
                      etcdKeyFile:
                        description: Path to the etcd key file. Valid if DatastoreType is
                          etcdv3.
                        type: string
                      etcdPassword:
                        description: Password for the given user name. Valid if DatastoreType
                          is etcdv3.
                        type: string
                      etcdUsername:
                        description: User name for RBAC. Valid if DatastoreType is etcdv3.
                        type: string
                      k8sAPIEndpoint:
                        description: Location of the Kubernetes API. Not required if using
                          kubeconfig. Valid if DatastoreType is kubernetes.
                        type: string
                      k8sAPIToken:
                        description: Token to be used for accessing the Kubernetes API. Valid
                          if DatastoreType is kubernetes.
                        type: string
                      k8sCAFile:
                        description: Location of a CA for accessing the Kubernetes API. Valid
                          if DatastoreType is kubernetes.
                        type: string
                      k8sCertFile:
                        description: Location of a client certificate for accessing the Kubernetes
                          API. Valid if DatastoreType is kubernetes.
                        type: string
                      k8sInsecureSkipTLSVerify:
                        type: boolean
                      k8sKeyFile:
                        description: Location of a client key for accessing the Kubernetes
                          API. Valid if DatastoreType is kubernetes.
                        type: string
                      kubeconfig:
                        description: When using the Kubernetes datastore, the location of
                          a kubeconfig file. Valid if DatastoreType is kubernetes.
                        type: string
                      kubeconfigInline:
                        description: This is an alternative to Kubeconfig and if specified
                          overrides Kubeconfig. This contains the contents that would normally
                          be in the file pointed at by Kubeconfig.
                        type: string
                    type: object
                type: object
            served: true
            storage: true
        status:
          acceptedNames:
            kind: ""
            plural: ""
          conditions: []
          storedVersions: []

  StagedGlobalNetworkPoliciesCRD:
    Type: "Custom::KubeManifest"
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: (devel)
          name: stagedglobalnetworkpolicies.crd.projectcalico.org
        spec:
          group: crd.projectcalico.org
          names:
            kind: StagedGlobalNetworkPolicy
            listKind: StagedGlobalNetworkPolicyList
            plural: stagedglobalnetworkpolicies
            singular: stagedglobalnetworkpolicy
          scope: Cluster
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    properties:
                      applyOnForward:
                        description: ApplyOnForward indicates to apply the rules in this policy
                          on forward traffic.
                        type: boolean
                      doNotTrack:
                        description: DoNotTrack indicates whether packets matched by the rules
                          in this policy should go through the data plane's connection tracking,
                          such as Linux conntrack.  If True, the rules in this policy are
                          applied before any data plane connection tracking, and packets allowed
                          by this policy are marked as not to be tracked.
                        type: boolean
                      egress:
                        description: The ordered set of egress rules.  Each rule contains
                          a set of packet match criteria and a corresponding action to apply.
                        items:
                          description: "A Rule encapsulates a set of match criteria and an
                            action.  Both selector-based security Policy and security Profiles
                            reference rules - separated out as a list of rules for both ingress
                            and egress packet matching. \n Each positive match criteria has
                            a negated version, prefixed with ”Not”. All the match criteria
                            within a rule must be satisfied for a packet to match. A single
                            rule can contain the positive and negative version of a match
                            and both must be satisfied for the rule to match."
                          properties:
                            action:
                              type: string
                            destination:
                              description: Destination contains the match criteria that apply
                                to destination entity.
                              properties:
                                domains:
                                  description: Domains is an optional field, valid for egress
                                    Allow rules only, that restricts the rule to apply only
                                    to traffic to one of the specified domains.  If this field
                                    is specified, Action must be Allow, and Nets and Selector
                                    must both be left empty.
                                  items:
                                    type: string
                                  type: array
                                namespaceSelector:
                                  description: "NamespaceSelector is an optional field that
                                    contains a selector expression. Only traffic that originates
                                    from (or terminates at) endpoints within the selected
                                    namespaces will be matched. When both NamespaceSelector
                                    and Selector are defined on the same rule, then only workload
                                    endpoints that are matched by both selectors will be selected
                                    by the rule. \n For NetworkPolicy, an empty NamespaceSelector
                                    implies that the Selector is limited to selecting only
                                    workload endpoints in the same namespace as the NetworkPolicy.
                                    \n For NetworkPolicy, `global()` NamespaceSelector implies
                                    that the Selector is limited to selecting only GlobalNetworkSet
                                    or HostEndpoint. \n For GlobalNetworkPolicy, an empty
                                    NamespaceSelector implies the Selector applies to workload
                                    endpoints across all namespaces."
                                  type: string
                                nets:
                                  description: Nets is an optional field that restricts the
                                    rule to only apply to traffic that originates from (or
                                    terminates at) IP addresses in any of the given subnets.
                                  items:
                                    type: string
                                  type: array
                                notNets:
                                  description: NotNets is the negated version of the Nets
                                    field.
                                  items:
                                    type: string
                                  type: array
                                notPorts:
                                  description: NotPorts is the negated version of the Ports
                                    field. Since only some protocols have ports, if any ports
                                    are specified it requires the Protocol match in the Rule
                                    to be set to "TCP" or "UDP".
                                  items:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^.*
                                    x-kubernetes-int-or-string: true
                                  type: array
                                notSelector:
                                  description: NotSelector is the negated version of the Selector
                                    field.  See Selector field for subtleties with negated
                                    selectors.
                                  type: string
                                ports:
                                  description: "Ports is an optional field that restricts
                                    the rule to only apply to traffic that has a source (destination)
                                    port that matches one of these ranges/values. This value
                                    is a list of integers or strings that represent ranges
                                    of ports. \n Since only some protocols have ports, if
                                    any ports are specified it requires the Protocol match
                                    in the Rule to be set to \"TCP\" or \"UDP\"."
                                  items:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^.*
                                    x-kubernetes-int-or-string: true
                                  type: array
                                selector:
                                  description: "Selector is an optional field that contains
                                    a selector expression (see Policy for sample syntax).
                                    \ Only traffic that originates from (terminates at) endpoints
                                    matching the selector will be matched. \n Note that: in
                                    addition to the negated version of the Selector (see NotSelector
                                    below), the selector expression syntax itself supports
                                    negation.  The two types of negation are subtly different.
                                    One negates the set of matched endpoints, the other negates
                                    the whole match: \n \tSelector = \"!has(my_label)\" matches
                                    packets that are from other Calico-controlled \tendpoints
                                    that do not have the label “my_label”. \n \tNotSelector
                                    = \"has(my_label)\" matches packets that are not from
                                    Calico-controlled \tendpoints that do have the label “my_label”.
                                    \n The effect is that the latter will accept packets from
                                    non-Calico sources whereas the former is limited to packets
                                    from Calico-controlled endpoints."
                                  type: string
                                serviceAccounts:
                                  description: ServiceAccounts is an optional field that restricts
                                    the rule to only apply to traffic that originates from
                                    (or terminates at) a pod running as a matching service
                                    account.
                                  properties:
                                    names:
                                      description: Names is an optional field that restricts
                                        the rule to only apply to traffic that originates
                                        from (or terminates at) a pod running as a service
                                        account whose name is in the list.
                                      items:
                                        type: string
                                      type: array
                                    selector:
                                      description: Selector is an optional field that restricts
                                        the rule to only apply to traffic that originates
                                        from (or terminates at) a pod running as a service
                                        account that matches the given label selector. If
                                        both Names and Selector are specified then they are
                                        AND'ed.
                                      type: string
                                  type: object
                              type: object
                            http:
                              description: HTTP contains match criteria that apply to HTTP
                                requests.
                              properties:
                                methods:
                                  description: Methods is an optional field that restricts
                                    the rule to apply only to HTTP requests that use one of
                                    the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple
                                    methods are OR'd together.
                                  items:
                                    type: string
                                  type: array
                                paths:
                                  description: 'Paths is an optional field that restricts
                                    the rule to apply to HTTP requests that use one of the
                                    listed HTTP Paths. Multiple paths are OR''d together.
                                    e.g: - exact: /foo - prefix: /bar NOTE: Each entry may
                                    ONLY specify either a `exact` or a `prefix` match. The
                                    validator will check for it.'
                                  items:
                                    description: 'HTTPPath specifies an HTTP path to match.
                                      It may be either of the form: exact: <path>: which matches
                                      the path exactly or prefix: <path-prefix>: which matches
                                      the path prefix'
                                    properties:
                                      exact:
                                        type: string
                                      prefix:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            icmp:
                              description: ICMP is an optional field that restricts the rule
                                to apply to a specific type and code of ICMP traffic.  This
                                should only be specified if the Protocol field is set to "ICMP"
                                or "ICMPv6".
                              properties:
                                code:
                                  description: Match on a specific ICMP code.  If specified,
                                    the Type value must also be specified. This is a technical
                                    limitation imposed by the kernel’s iptables firewall,
                                    which Calico uses to enforce the rule.
                                  type: integer
                                type:
                                  description: Match on a specific ICMP type.  For example
                                    a value of 8 refers to ICMP Echo Request (i.e. pings).
                                  type: integer
                              type: object
                            ipVersion:
                              description: IPVersion is an optional field that restricts the
                                rule to only match a specific IP version.
                              type: integer
                            metadata:
                              description: Metadata contains additional information for this
                                rule
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations is a set of key value pairs that
                                    give extra information about the rule
                                  type: object
                              type: object
                            notICMP:
                              description: NotICMP is the negated version of the ICMP field.
                              properties:
                                code:
                                  description: Match on a specific ICMP code.  If specified,
                                    the Type value must also be specified. This is a technical
                                    limitation imposed by the kernel’s iptables firewall,
                                    which Calico uses to enforce the rule.
                                  type: integer
                                type:
                                  description: Match on a specific ICMP type.  For example
                                    a value of 8 refers to ICMP Echo Request (i.e. pings).
                                  type: integer
                              type: object
                            notProtocol:
                              anyOf:
                              - type: integer
                              - type: string
                              description: NotProtocol is the negated version of the Protocol
                                field.
                              pattern: ^.*
                              x-kubernetes-int-or-string: true
                            protocol:
                              anyOf:
                              - type: integer
                              - type: string
                              description: "Protocol is an optional field that restricts the
                                rule to only apply to traffic of a specific IP protocol. Required
                                if any of the EntityRules contain Ports (because ports only
                                apply to certain protocols). \n Must be one of these string
                                values: \"TCP\", \"UDP\", \"ICMP\", \"ICMPv6\", \"SCTP\",
                                \"UDPLite\" or an integer in the range 1-255."
                              pattern: ^.*
                              x-kubernetes-int-or-string: true
                            source:
                              description: Source contains the match criteria that apply to
                                source entity.
                              properties:
                                domains:
                                  description: Domains is an optional field, valid for egress
                                    Allow rules only, that restricts the rule to apply only
                                    to traffic to one of the specified domains.  If this field
                                    is specified, Action must be Allow, and Nets and Selector
                                    must both be left empty.
                                  items:
                                    type: string
                                  type: array
                                namespaceSelector:
                                  description: "NamespaceSelector is an optional field that
                                    contains a selector expression. Only traffic that originates
                                    from (or terminates at) endpoints within the selected
                                    namespaces will be matched. When both NamespaceSelector
                                    and Selector are defined on the same rule, then only workload
                                    endpoints that are matched by both selectors will be selected
                                    by the rule. \n For NetworkPolicy, an empty NamespaceSelector
                                    implies that the Selector is limited to selecting only
                                    workload endpoints in the same namespace as the NetworkPolicy.
                                    \n For NetworkPolicy, `global()` NamespaceSelector implies
                                    that the Selector is limited to selecting only GlobalNetworkSet
                                    or HostEndpoint. \n For GlobalNetworkPolicy, an empty
                                    NamespaceSelector implies the Selector applies to workload
                                    endpoints across all namespaces."
                                  type: string
                                nets:
                                  description: Nets is an optional field that restricts the
                                    rule to only apply to traffic that originates from (or
                                    terminates at) IP addresses in any of the given subnets.
                                  items:
                                    type: string
                                  type: array
                                notNets:
                                  description: NotNets is the negated version of the Nets
                                    field.
                                  items:
                                    type: string
                                  type: array
                                notPorts:
                                  description: NotPorts is the negated version of the Ports
                                    field. Since only some protocols have ports, if any ports
                                    are specified it requires the Protocol match in the Rule
                                    to be set to "TCP" or "UDP".
                                  items:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^.*
                                    x-kubernetes-int-or-string: true
                                  type: array
                                notSelector:
                                  description: NotSelector is the negated version of the Selector
                                    field.  See Selector field for subtleties with negated
                                    selectors.
                                  type: string
                                ports:
                                  description: "Ports is an optional field that restricts
                                    the rule to only apply to traffic that has a source (destination)
                                    port that matches one of these ranges/values. This value
                                    is a list of integers or strings that represent ranges
                                    of ports. \n Since only some protocols have ports, if
                                    any ports are specified it requires the Protocol match
                                    in the Rule to be set to \"TCP\" or \"UDP\"."
                                  items:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^.*
                                    x-kubernetes-int-or-string: true
                                  type: array
                                selector:
                                  description: "Selector is an optional field that contains
                                    a selector expression (see Policy for sample syntax).
                                    \ Only traffic that originates from (terminates at) endpoints
                                    matching the selector will be matched. \n Note that: in
                                    addition to the negated version of the Selector (see NotSelector
                                    below), the selector expression syntax itself supports
                                    negation.  The two types of negation are subtly different.
                                    One negates the set of matched endpoints, the other negates
                                    the whole match: \n \tSelector = \"!has(my_label)\" matches
                                    packets that are from other Calico-controlled \tendpoints
                                    that do not have the label “my_label”. \n \tNotSelector
                                    = \"has(my_label)\" matches packets that are not from
                                    Calico-controlled \tendpoints that do have the label “my_label”.
                                    \n The effect is that the latter will accept packets from
                                    non-Calico sources whereas the former is limited to packets
                                    from Calico-controlled endpoints."
                                  type: string
                                serviceAccounts:
                                  description: ServiceAccounts is an optional field that restricts
                                    the rule to only apply to traffic that originates from
                                    (or terminates at) a pod running as a matching service
                                    account.
                                  properties:
                                    names:
                                      description: Names is an optional field that restricts
                                        the rule to only apply to traffic that originates
                                        from (or terminates at) a pod running as a service
                                        account whose name is in the list.
                                      items:
                                        type: string
                                      type: array
                                    selector:
                                      description: Selector is an optional field that restricts
                                        the rule to only apply to traffic that originates
                                        from (or terminates at) a pod running as a service
                                        account that matches the given label selector. If
                                        both Names and Selector are specified then they are
                                        AND'ed.
                                      type: string
                                  type: object
                              type: object
                          required:
                          - action
                          type: object
                        type: array
                      ingress:
                        description: The ordered set of ingress rules.  Each rule contains
                          a set of packet match criteria and a corresponding action to apply.
                        items:
                          description: "A Rule encapsulates a set of match criteria and an
                            action.  Both selector-based security Policy and security Profiles
                            reference rules - separated out as a list of rules for both ingress
                            and egress packet matching. \n Each positive match criteria has
                            a negated version, prefixed with ”Not”. All the match criteria
                            within a rule must be satisfied for a packet to match. A single
                            rule can contain the positive and negative version of a match
                            and both must be satisfied for the rule to match."
                          properties:
                            action:
                              type: string
                            destination:
                              description: Destination contains the match criteria that apply
                                to destination entity.
                              properties:
                                domains:
                                  description: Domains is an optional field, valid for egress
                                    Allow rules only, that restricts the rule to apply only
                                    to traffic to one of the specified domains.  If this field
                                    is specified, Action must be Allow, and Nets and Selector
                                    must both be left empty.
                                  items:
                                    type: string
                                  type: array
                                namespaceSelector:
                                  description: "NamespaceSelector is an optional field that
                                    contains a selector expression. Only traffic that originates
                                    from (or terminates at) endpoints within the selected
                                    namespaces will be matched. When both NamespaceSelector
                                    and Selector are defined on the same rule, then only workload
                                    endpoints that are matched by both selectors will be selected
                                    by the rule. \n For NetworkPolicy, an empty NamespaceSelector
                                    implies that the Selector is limited to selecting only
                                    workload endpoints in the same namespace as the NetworkPolicy.
                                    \n For NetworkPolicy, `global()` NamespaceSelector implies
                                    that the Selector is limited to selecting only GlobalNetworkSet
                                    or HostEndpoint. \n For GlobalNetworkPolicy, an empty
                                    NamespaceSelector implies the Selector applies to workload
                                    endpoints across all namespaces."
                                  type: string
                                nets:
                                  description: Nets is an optional field that restricts the
                                    rule to only apply to traffic that originates from (or
                                    terminates at) IP addresses in any of the given subnets.
                                  items:
                                    type: string
                                  type: array
                                notNets:
                                  description: NotNets is the negated version of the Nets
                                    field.
                                  items:
                                    type: string
                                  type: array
                                notPorts:
                                  description: NotPorts is the negated version of the Ports
                                    field. Since only some protocols have ports, if any ports
                                    are specified it requires the Protocol match in the Rule
                                    to be set to "TCP" or "UDP".
                                  items:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^.*
                                    x-kubernetes-int-or-string: true
                                  type: array
                                notSelector:
                                  description: NotSelector is the negated version of the Selector
                                    field.  See Selector field for subtleties with negated
                                    selectors.
                                  type: string
                                ports:
                                  description: "Ports is an optional field that restricts
                                    the rule to only apply to traffic that has a source (destination)
                                    port that matches one of these ranges/values. This value
                                    is a list of integers or strings that represent ranges
                                    of ports. \n Since only some protocols have ports, if
                                    any ports are specified it requires the Protocol match
                                    in the Rule to be set to \"TCP\" or \"UDP\"."
                                  items:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^.*
                                    x-kubernetes-int-or-string: true
                                  type: array
                                selector:
                                  description: "Selector is an optional field that contains
                                    a selector expression (see Policy for sample syntax).
                                    \ Only traffic that originates from (terminates at) endpoints
                                    matching the selector will be matched. \n Note that: in
                                    addition to the negated version of the Selector (see NotSelector
                                    below), the selector expression syntax itself supports
                                    negation.  The two types of negation are subtly different.
                                    One negates the set of matched endpoints, the other negates
                                    the whole match: \n \tSelector = \"!has(my_label)\" matches
                                    packets that are from other Calico-controlled \tendpoints
                                    that do not have the label “my_label”. \n \tNotSelector
                                    = \"has(my_label)\" matches packets that are not from
                                    Calico-controlled \tendpoints that do have the label “my_label”.
                                    \n The effect is that the latter will accept packets from
                                    non-Calico sources whereas the former is limited to packets
                                    from Calico-controlled endpoints."
                                  type: string
                                serviceAccounts:
                                  description: ServiceAccounts is an optional field that restricts
                                    the rule to only apply to traffic that originates from
                                    (or terminates at) a pod running as a matching service
                                    account.
                                  properties:
                                    names:
                                      description: Names is an optional field that restricts
                                        the rule to only apply to traffic that originates
                                        from (or terminates at) a pod running as a service
                                        account whose name is in the list.
                                      items:
                                        type: string
                                      type: array
                                    selector:
                                      description: Selector is an optional field that restricts
                                        the rule to only apply to traffic that originates
                                        from (or terminates at) a pod running as a service
                                        account that matches the given label selector. If
                                        both Names and Selector are specified then they are
                                        AND'ed.
                                      type: string
                                  type: object
                              type: object
                            http:
                              description: HTTP contains match criteria that apply to HTTP
                                requests.
                              properties:
                                methods:
                                  description: Methods is an optional field that restricts
                                    the rule to apply only to HTTP requests that use one of
                                    the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple
                                    methods are OR'd together.
                                  items:
                                    type: string
                                  type: array
                                paths:
                                  description: 'Paths is an optional field that restricts
                                    the rule to apply to HTTP requests that use one of the
                                    listed HTTP Paths. Multiple paths are OR''d together.
                                    e.g: - exact: /foo - prefix: /bar NOTE: Each entry may
                                    ONLY specify either a `exact` or a `prefix` match. The
                                    validator will check for it.'
                                  items:
                                    description: 'HTTPPath specifies an HTTP path to match.
                                      It may be either of the form: exact: <path>: which matches
                                      the path exactly or prefix: <path-prefix>: which matches
                                      the path prefix'
                                    properties:
                                      exact:
                                        type: string
                                      prefix:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            icmp:
                              description: ICMP is an optional field that restricts the rule
                                to apply to a specific type and code of ICMP traffic.  This
                                should only be specified if the Protocol field is set to "ICMP"
                                or "ICMPv6".
                              properties:
                                code:
                                  description: Match on a specific ICMP code.  If specified,
                                    the Type value must also be specified. This is a technical
                                    limitation imposed by the kernel’s iptables firewall,
                                    which Calico uses to enforce the rule.
                                  type: integer
                                type:
                                  description: Match on a specific ICMP type.  For example
                                    a value of 8 refers to ICMP Echo Request (i.e. pings).
                                  type: integer
                              type: object
                            ipVersion:
                              description: IPVersion is an optional field that restricts the
                                rule to only match a specific IP version.
                              type: integer
                            metadata:
                              description: Metadata contains additional information for this
                                rule
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations is a set of key value pairs that
                                    give extra information about the rule
                                  type: object
                              type: object
                            notICMP:
                              description: NotICMP is the negated version of the ICMP field.
                              properties:
                                code:
                                  description: Match on a specific ICMP code.  If specified,
                                    the Type value must also be specified. This is a technical
                                    limitation imposed by the kernel’s iptables firewall,
                                    which Calico uses to enforce the rule.
                                  type: integer
                                type:
                                  description: Match on a specific ICMP type.  For example
                                    a value of 8 refers to ICMP Echo Request (i.e. pings).
                                  type: integer
                              type: object
                            notProtocol:
                              anyOf:
                              - type: integer
                              - type: string
                              description: NotProtocol is the negated version of the Protocol
                                field.
                              pattern: ^.*
                              x-kubernetes-int-or-string: true
                            protocol:
                              anyOf:
                              - type: integer
                              - type: string
                              description: "Protocol is an optional field that restricts the
                                rule to only apply to traffic of a specific IP protocol. Required
                                if any of the EntityRules contain Ports (because ports only
                                apply to certain protocols). \n Must be one of these string
                                values: \"TCP\", \"UDP\", \"ICMP\", \"ICMPv6\", \"SCTP\",
                                \"UDPLite\" or an integer in the range 1-255."
                              pattern: ^.*
                              x-kubernetes-int-or-string: true
                            source:
                              description: Source contains the match criteria that apply to
                                source entity.
                              properties:
                                domains:
                                  description: Domains is an optional field, valid for egress
                                    Allow rules only, that restricts the rule to apply only
                                    to traffic to one of the specified domains.  If this field
                                    is specified, Action must be Allow, and Nets and Selector
                                    must both be left empty.
                                  items:
                                    type: string
                                  type: array
                                namespaceSelector:
                                  description: "NamespaceSelector is an optional field that
                                    contains a selector expression. Only traffic that originates
                                    from (or terminates at) endpoints within the selected
                                    namespaces will be matched. When both NamespaceSelector
                                    and Selector are defined on the same rule, then only workload
                                    endpoints that are matched by both selectors will be selected
                                    by the rule. \n For NetworkPolicy, an empty NamespaceSelector
                                    implies that the Selector is limited to selecting only
                                    workload endpoints in the same namespace as the NetworkPolicy.
                                    \n For NetworkPolicy, `global()` NamespaceSelector implies
                                    that the Selector is limited to selecting only GlobalNetworkSet
                                    or HostEndpoint. \n For GlobalNetworkPolicy, an empty
                                    NamespaceSelector implies the Selector applies to workload
                                    endpoints across all namespaces."
                                  type: string
                                nets:
                                  description: Nets is an optional field that restricts the
                                    rule to only apply to traffic that originates from (or
                                    terminates at) IP addresses in any of the given subnets.
                                  items:
                                    type: string
                                  type: array
                                notNets:
                                  description: NotNets is the negated version of the Nets
                                    field.
                                  items:
                                    type: string
                                  type: array
                                notPorts:
                                  description: NotPorts is the negated version of the Ports
                                    field. Since only some protocols have ports, if any ports
                                    are specified it requires the Protocol match in the Rule
                                    to be set to "TCP" or "UDP".
                                  items:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^.*
                                    x-kubernetes-int-or-string: true
                                  type: array
                                notSelector:
                                  description: NotSelector is the negated version of the Selector
                                    field.  See Selector field for subtleties with negated
                                    selectors.
                                  type: string
                                ports:
                                  description: "Ports is an optional field that restricts
                                    the rule to only apply to traffic that has a source (destination)
                                    port that matches one of these ranges/values. This value
                                    is a list of integers or strings that represent ranges
                                    of ports. \n Since only some protocols have ports, if
                                    any ports are specified it requires the Protocol match
                                    in the Rule to be set to \"TCP\" or \"UDP\"."
                                  items:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^.*
                                    x-kubernetes-int-or-string: true
                                  type: array
                                selector:
                                  description: "Selector is an optional field that contains
                                    a selector expression (see Policy for sample syntax).
                                    \ Only traffic that originates from (terminates at) endpoints
                                    matching the selector will be matched. \n Note that: in
                                    addition to the negated version of the Selector (see NotSelector
                                    below), the selector expression syntax itself supports
                                    negation.  The two types of negation are subtly different.
                                    One negates the set of matched endpoints, the other negates
                                    the whole match: \n \tSelector = \"!has(my_label)\" matches
                                    packets that are from other Calico-controlled \tendpoints
                                    that do not have the label “my_label”. \n \tNotSelector
                                    = \"has(my_label)\" matches packets that are not from
                                    Calico-controlled \tendpoints that do have the label “my_label”.
                                    \n The effect is that the latter will accept packets from
                                    non-Calico sources whereas the former is limited to packets
                                    from Calico-controlled endpoints."
                                  type: string
                                serviceAccounts:
                                  description: ServiceAccounts is an optional field that restricts
                                    the rule to only apply to traffic that originates from
                                    (or terminates at) a pod running as a matching service
                                    account.
                                  properties:
                                    names:
                                      description: Names is an optional field that restricts
                                        the rule to only apply to traffic that originates
                                        from (or terminates at) a pod running as a service
                                        account whose name is in the list.
                                      items:
                                        type: string
                                      type: array
                                    selector:
                                      description: Selector is an optional field that restricts
                                        the rule to only apply to traffic that originates
                                        from (or terminates at) a pod running as a service
                                        account that matches the given label selector. If
                                        both Names and Selector are specified then they are
                                        AND'ed.
                                      type: string
                                  type: object
                              type: object
                          required:
                          - action
                          type: object
                        type: array
                      namespaceSelector:
                        description: NamespaceSelector is an optional field for an expression
                          used to select a pod based on namespaces.
                        type: string
                      order:
                        description: Order is an optional field that specifies the order in
                          which the policy is applied. Policies with higher "order" are applied
                          after those with lower order within the same tier.  If the order
                          is omitted, it may be considered to be "infinite" - i.e. the policy
                          will be applied last.  Policies with identical order will be applied
                          in alphanumerical order based on the Policy "Name" within the tier.
                        type: number
                      preDNAT:
                        description: PreDNAT indicates to apply the rules in this policy before
                          any DNAT.
                        type: boolean
                      selector:
                        description: "The selector is an expression used to pick pick out
                          the endpoints that the policy should be applied to. \n Selector
                          expressions follow this syntax: \n \tlabel == \"string_literal\"
                          \ ->  comparison, e.g. my_label == \"foo bar\" \tlabel != \"string_literal\"
                          \  ->  not equal; also matches if label is not present \tlabel in
                          { \"a\", \"b\", \"c\", ... }  ->  true if the value of label X is
                          one of \"a\", \"b\", \"c\" \tlabel not in { \"a\", \"b\", \"c\",
                          ... }  ->  true if the value of label X is not one of \"a\", \"b\",
                          \"c\" \thas(label_name)  -> True if that label is present \t! expr
                          -> negation of expr \texpr && expr  -> Short-circuit and \texpr
                          || expr  -> Short-circuit or \t( expr ) -> parens for grouping \tall()
                          or the empty selector -> matches all endpoints. \n Label names are
                          allowed to contain alphanumerics, -, _ and /. String literals are
                          more permissive but they do not support escape characters. \n Examples
                          (with made-up labels): \n \ttype == \"webserver\" && deployment
                          == \"prod\" \ttype in {\"frontend\", \"backend\"} \tdeployment !=
                          \"dev\" \t! has(label_name)"
                        type: string
                      serviceAccountSelector:
                        description: ServiceAccountSelector is an optional field for an expression
                          used to select a pod based on service accounts.
                        type: string
                      stagedAction:
                        description: The staged action. If this is omitted, the default is
                          Set.
                        type: string
                      tier:
                        description: The name of the tier that this policy belongs to.  If
                          this is omitted, the default tier (name is "default") is assumed.  The
                          specified tier must exist in order to create security policies within
                          the tier, the "default" tier is created automatically if it does
                          not exist, this means for deployments requiring only a single Tier,
                          the tier name may be omitted on all policy management requests.
                        type: string
                      types:
                        description: "Types indicates whether this policy applies to ingress,
                          or to egress, or to both.  When not explicitly specified (and so
                          the value on creation is empty or nil), Calico defaults Types according
                          to what Ingress and Egress rules are present in the policy.  The
                          default is: \n - [ PolicyTypeIngress ], if there are no Egress rules
                          (including the case where there are   also no Ingress rules) \n
                          - [ PolicyTypeEgress ], if there are Egress rules but no Ingress
                          rules \n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are
                          both Ingress and Egress rules. \n When the policy is read back again,
                          Types will always be one of these values, never empty or nil."
                        items:
                          description: PolicyType enumerates the possible values of the PolicySpec
                            Types field.
                          type: string
                        type: array
                    type: object
                type: object
            served: true
            storage: true
        status:
          acceptedNames:
            kind: ""
            plural: ""
          conditions: []
          storedVersions: []

  StagedKubernetesNetworkPoliciesCRD:
    Type: "Custom::KubeManifest"
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: (devel)
          name: stagedkubernetesnetworkpolicies.crd.projectcalico.org
        spec:
          group: crd.projectcalico.org
          names:
            kind: StagedKubernetesNetworkPolicy
            listKind: StagedKubernetesNetworkPolicyList
            plural: stagedkubernetesnetworkpolicies
            singular: stagedkubernetesnetworkpolicy
          scope: Namespaced
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    properties:
                      egress:
                        description: List of egress rules to be applied to the selected pods.
                          Outgoing traffic is allowed if there are no NetworkPolicies selecting
                          the pod (and cluster policy otherwise allows the traffic), OR if
                          the traffic matches at least one egress rule across all of the NetworkPolicy
                          objects whose podSelector matches the pod. If this field is empty
                          then this NetworkPolicy limits all outgoing traffic (and serves
                          solely to ensure that the pods it selects are isolated by default).
                          This field is beta-level in 1.8
                        items:
                          description: NetworkPolicyEgressRule describes a particular set
                            of traffic that is allowed out of pods matched by a NetworkPolicySpec's
                            podSelector. The traffic must match both ports and to. This type
                            is beta-level in 1.8
                          properties:
                            ports:
                              description: List of destination ports for outgoing traffic.
                                Each item in this list is combined using a logical OR. If
                                this field is empty or missing, this rule matches all ports
                                (traffic not restricted by port). If this field is present
                                and contains at least one item, then this rule allows traffic
                                only if the traffic matches at least one port in the list.
                              items:
                                description: NetworkPolicyPort describes a port to allow traffic
                                  on
                                properties:
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: The port on the given protocol. This can
                                      either be a numerical or named port on a pod. If this
                                      field is not provided, this matches all port names and
                                      numbers.
                                    x-kubernetes-int-or-string: true
                                  protocol:
                                    description: The protocol (TCP, UDP, or SCTP) which traffic
                                      must match. If not specified, this field defaults to
                                      TCP.
                                    type: string
                                type: object
                              type: array
                            to:
                              description: List of destinations for outgoing traffic of pods
                                selected for this rule. Items in this list are combined using
                                a logical OR operation. If this field is empty or missing,
                                this rule matches all destinations (traffic not restricted
                                by destination). If this field is present and contains at
                                least one item, this rule allows traffic only if the traffic
                                matches at least one item in the to list.
                              items:
                                description: NetworkPolicyPeer describes a peer to allow traffic
                                  from. Only certain combinations of fields are allowed
                                properties:
                                  ipBlock:
                                    description: IPBlock defines policy on a particular IPBlock.
                                      If this field is set then neither of the other fields
                                      can be.
                                    properties:
                                      cidr:
                                        description: CIDR is a string representing the IP
                                          Block Valid examples are "192.168.1.1/24"
                                        type: string
                                      except:
                                        description: Except is a slice of CIDRs that should
                                          not be included within an IP Block Valid examples
                                          are "192.168.1.1/24" Except values will be rejected
                                          if they are outside the CIDR range
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - cidr
                                    type: object
                                  namespaceSelector:
                                    description: "Selects Namespaces using cluster-scoped
                                      labels. This field follows standard label selector semantics;
                                      if present but empty, it selects all namespaces. \n
                                      If PodSelector is also set, then the NetworkPolicyPeer
                                      as a whole selects the Pods matching PodSelector in
                                      the Namespaces selected by NamespaceSelector. Otherwise
                                      it selects all Pods in the Namespaces selected by NamespaceSelector."
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector
                                          requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector
                                            that contains values, a key, and an operator that
                                            relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship
                                                to a set of values. Valid operators are In,
                                                NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values.
                                                If the operator is In or NotIn, the values
                                                array must be non-empty. If the operator is
                                                Exists or DoesNotExist, the values array must
                                                be empty. This array is replaced during a
                                                strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs.
                                          A single {key,value} in the matchLabels map is equivalent
                                          to an element of matchExpressions, whose key field
                                          is "key", the operator is "In", and the values array
                                          contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  podSelector:
                                    description: "This is a label selector which selects Pods.
                                      This field follows standard label selector semantics;
                                      if present but empty, it selects all pods. \n If NamespaceSelector
                                      is also set, then the NetworkPolicyPeer as a whole selects
                                      the Pods matching PodSelector in the Namespaces selected
                                      by NamespaceSelector. Otherwise it selects the Pods
                                      matching PodSelector in the policy's own Namespace."
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector
                                          requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector
                                            that contains values, a key, and an operator that
                                            relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship
                                                to a set of values. Valid operators are In,
                                                NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values.
                                                If the operator is In or NotIn, the values
                                                array must be non-empty. If the operator is
                                                Exists or DoesNotExist, the values array must
                                                be empty. This array is replaced during a
                                                strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs.
                                          A single {key,value} in the matchLabels map is equivalent
                                          to an element of matchExpressions, whose key field
                                          is "key", the operator is "In", and the values array
                                          contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                type: object
                              type: array
                          type: object
                        type: array
                      ingress:
                        description: List of ingress rules to be applied to the selected pods.
                          Traffic is allowed to a pod if there are no NetworkPolicies selecting
                          the pod (and cluster policy otherwise allows the traffic), OR if
                          the traffic source is the pod's local node, OR if the traffic matches
                          at least one ingress rule across all of the NetworkPolicy objects
                          whose podSelector matches the pod. If this field is empty then this
                          NetworkPolicy does not allow any traffic (and serves solely to ensure
                          that the pods it selects are isolated by default)
                        items:
                          description: NetworkPolicyIngressRule describes a particular set
                            of traffic that is allowed to the pods matched by a NetworkPolicySpec's
                            podSelector. The traffic must match both ports and from.
                          properties:
                            from:
                              description: List of sources which should be able to access
                                the pods selected for this rule. Items in this list are combined
                                using a logical OR operation. If this field is empty or missing,
                                this rule matches all sources (traffic not restricted by source).
                                If this field is present and contains at least one item, this
                                rule allows traffic only if the traffic matches at least one
                                item in the from list.
                              items:
                                description: NetworkPolicyPeer describes a peer to allow traffic
                                  from. Only certain combinations of fields are allowed
                                properties:
                                  ipBlock:
                                    description: IPBlock defines policy on a particular IPBlock.
                                      If this field is set then neither of the other fields
                                      can be.
                                    properties:
                                      cidr:
                                        description: CIDR is a string representing the IP
                                          Block Valid examples are "192.168.1.1/24"
                                        type: string
                                      except:
                                        description: Except is a slice of CIDRs that should
                                          not be included within an IP Block Valid examples
                                          are "192.168.1.1/24" Except values will be rejected
                                          if they are outside the CIDR range
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - cidr
                                    type: object
                                  namespaceSelector:
                                    description: "Selects Namespaces using cluster-scoped
                                      labels. This field follows standard label selector semantics;
                                      if present but empty, it selects all namespaces. \n
                                      If PodSelector is also set, then the NetworkPolicyPeer
                                      as a whole selects the Pods matching PodSelector in
                                      the Namespaces selected by NamespaceSelector. Otherwise
                                      it selects all Pods in the Namespaces selected by NamespaceSelector."
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector
                                          requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector
                                            that contains values, a key, and an operator that
                                            relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship
                                                to a set of values. Valid operators are In,
                                                NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values.
                                                If the operator is In or NotIn, the values
                                                array must be non-empty. If the operator is
                                                Exists or DoesNotExist, the values array must
                                                be empty. This array is replaced during a
                                                strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs.
                                          A single {key,value} in the matchLabels map is equivalent
                                          to an element of matchExpressions, whose key field
                                          is "key", the operator is "In", and the values array
                                          contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  podSelector:
                                    description: "This is a label selector which selects Pods.
                                      This field follows standard label selector semantics;
                                      if present but empty, it selects all pods. \n If NamespaceSelector
                                      is also set, then the NetworkPolicyPeer as a whole selects
                                      the Pods matching PodSelector in the Namespaces selected
                                      by NamespaceSelector. Otherwise it selects the Pods
                                      matching PodSelector in the policy's own Namespace."
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector
                                          requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector
                                            that contains values, a key, and an operator that
                                            relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship
                                                to a set of values. Valid operators are In,
                                                NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values.
                                                If the operator is In or NotIn, the values
                                                array must be non-empty. If the operator is
                                                Exists or DoesNotExist, the values array must
                                                be empty. This array is replaced during a
                                                strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs.
                                          A single {key,value} in the matchLabels map is equivalent
                                          to an element of matchExpressions, whose key field
                                          is "key", the operator is "In", and the values array
                                          contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                type: object
                              type: array
                            ports:
                              description: List of ports which should be made accessible on
                                the pods selected for this rule. Each item in this list is
                                combined using a logical OR. If this field is empty or missing,
                                this rule matches all ports (traffic not restricted by port).
                                If this field is present and contains at least one item, then
                                this rule allows traffic only if the traffic matches at least
                                one port in the list.
                              items:
                                description: NetworkPolicyPort describes a port to allow traffic
                                  on
                                properties:
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: The port on the given protocol. This can
                                      either be a numerical or named port on a pod. If this
                                      field is not provided, this matches all port names and
                                      numbers.
                                    x-kubernetes-int-or-string: true
                                  protocol:
                                    description: The protocol (TCP, UDP, or SCTP) which traffic
                                      must match. If not specified, this field defaults to
                                      TCP.
                                    type: string
                                type: object
                              type: array
                          type: object
                        type: array
                      podSelector:
                        description: Selects the pods to which this NetworkPolicy object applies.
                          The array of ingress rules is applied to any pods selected by this
                          field. Multiple network policies can select the same set of pods.
                          In this case, the ingress rules for each are combined additively.
                          This field is NOT optional and follows standard label selector semantics.
                          An empty podSelector matches all pods in this namespace.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements.
                              The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector that
                                contains values, a key, and an operator that relates the key
                                and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies
                                    to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to
                                    a set of values. Valid operators are In, NotIn, Exists
                                    and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the
                                    operator is In or NotIn, the values array must be non-empty.
                                    If the operator is Exists or DoesNotExist, the values
                                    array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs. A single
                              {key,value} in the matchLabels map is equivalent to an element
                              of matchExpressions, whose key field is "key", the operator
                              is "In", and the values array contains only "value". The requirements
                              are ANDed.
                            type: object
                        type: object
                      policyTypes:
                        description: List of rule types that the NetworkPolicy relates to.
                          Valid options are Ingress, Egress, or Ingress,Egress. If this field
                          is not specified, it will default based on the existence of Ingress
                          or Egress rules; policies that contain an Egress section are assumed
                          to affect Egress, and all policies (whether or not they contain
                          an Ingress section) are assumed to affect Ingress. If you want to
                          write an egress-only policy, you must explicitly specify policyTypes
                          [ "Egress" ]. Likewise, if you want to write a policy that specifies
                          that no egress is allowed, you must specify a policyTypes value
                          that include "Egress" (since such a policy would not include an
                          Egress section and would otherwise default to just [ "Ingress" ]).
                          This field is beta-level in 1.8
                        items:
                          description: Policy Type string describes the NetworkPolicy type
                            This type is beta-level in 1.8
                          type: string
                        type: array
                      stagedAction:
                        description: The staged action. If this is omitted, the default is
                          Set.
                        type: string
                    type: object
                type: object
            served: true
            storage: true
        status:
          acceptedNames:
            kind: ""
            plural: ""
          conditions: []
          storedVersions: []

  StangedNetworkPoliciesCRD:
    Type: "Custom::KubeManifest"
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: (devel)
          name: stagednetworkpolicies.crd.projectcalico.org
        spec:
          group: crd.projectcalico.org
          names:
            kind: StagedNetworkPolicy
            listKind: StagedNetworkPolicyList
            plural: stagednetworkpolicies
            singular: stagednetworkpolicy
          scope: Namespaced
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    properties:
                      egress:
                        description: The ordered set of egress rules.  Each rule contains
                          a set of packet match criteria and a corresponding action to apply.
                        items:
                          description: "A Rule encapsulates a set of match criteria and an
                            action.  Both selector-based security Policy and security Profiles
                            reference rules - separated out as a list of rules for both ingress
                            and egress packet matching. \n Each positive match criteria has
                            a negated version, prefixed with ”Not”. All the match criteria
                            within a rule must be satisfied for a packet to match. A single
                            rule can contain the positive and negative version of a match
                            and both must be satisfied for the rule to match."
                          properties:
                            action:
                              type: string
                            destination:
                              description: Destination contains the match criteria that apply
                                to destination entity.
                              properties:
                                domains:
                                  description: Domains is an optional field, valid for egress
                                    Allow rules only, that restricts the rule to apply only
                                    to traffic to one of the specified domains.  If this field
                                    is specified, Action must be Allow, and Nets and Selector
                                    must both be left empty.
                                  items:
                                    type: string
                                  type: array
                                namespaceSelector:
                                  description: "NamespaceSelector is an optional field that
                                    contains a selector expression. Only traffic that originates
                                    from (or terminates at) endpoints within the selected
                                    namespaces will be matched. When both NamespaceSelector
                                    and Selector are defined on the same rule, then only workload
                                    endpoints that are matched by both selectors will be selected
                                    by the rule. \n For NetworkPolicy, an empty NamespaceSelector
                                    implies that the Selector is limited to selecting only
                                    workload endpoints in the same namespace as the NetworkPolicy.
                                    \n For NetworkPolicy, `global()` NamespaceSelector implies
                                    that the Selector is limited to selecting only GlobalNetworkSet
                                    or HostEndpoint. \n For GlobalNetworkPolicy, an empty
                                    NamespaceSelector implies the Selector applies to workload
                                    endpoints across all namespaces."
                                  type: string
                                nets:
                                  description: Nets is an optional field that restricts the
                                    rule to only apply to traffic that originates from (or
                                    terminates at) IP addresses in any of the given subnets.
                                  items:
                                    type: string
                                  type: array
                                notNets:
                                  description: NotNets is the negated version of the Nets
                                    field.
                                  items:
                                    type: string
                                  type: array
                                notPorts:
                                  description: NotPorts is the negated version of the Ports
                                    field. Since only some protocols have ports, if any ports
                                    are specified it requires the Protocol match in the Rule
                                    to be set to "TCP" or "UDP".
                                  items:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^.*
                                    x-kubernetes-int-or-string: true
                                  type: array
                                notSelector:
                                  description: NotSelector is the negated version of the Selector
                                    field.  See Selector field for subtleties with negated
                                    selectors.
                                  type: string
                                ports:
                                  description: "Ports is an optional field that restricts
                                    the rule to only apply to traffic that has a source (destination)
                                    port that matches one of these ranges/values. This value
                                    is a list of integers or strings that represent ranges
                                    of ports. \n Since only some protocols have ports, if
                                    any ports are specified it requires the Protocol match
                                    in the Rule to be set to \"TCP\" or \"UDP\"."
                                  items:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^.*
                                    x-kubernetes-int-or-string: true
                                  type: array
                                selector:
                                  description: "Selector is an optional field that contains
                                    a selector expression (see Policy for sample syntax).
                                    \ Only traffic that originates from (terminates at) endpoints
                                    matching the selector will be matched. \n Note that: in
                                    addition to the negated version of the Selector (see NotSelector
                                    below), the selector expression syntax itself supports
                                    negation.  The two types of negation are subtly different.
                                    One negates the set of matched endpoints, the other negates
                                    the whole match: \n \tSelector = \"!has(my_label)\" matches
                                    packets that are from other Calico-controlled \tendpoints
                                    that do not have the label “my_label”. \n \tNotSelector
                                    = \"has(my_label)\" matches packets that are not from
                                    Calico-controlled \tendpoints that do have the label “my_label”.
                                    \n The effect is that the latter will accept packets from
                                    non-Calico sources whereas the former is limited to packets
                                    from Calico-controlled endpoints."
                                  type: string
                                serviceAccounts:
                                  description: ServiceAccounts is an optional field that restricts
                                    the rule to only apply to traffic that originates from
                                    (or terminates at) a pod running as a matching service
                                    account.
                                  properties:
                                    names:
                                      description: Names is an optional field that restricts
                                        the rule to only apply to traffic that originates
                                        from (or terminates at) a pod running as a service
                                        account whose name is in the list.
                                      items:
                                        type: string
                                      type: array
                                    selector:
                                      description: Selector is an optional field that restricts
                                        the rule to only apply to traffic that originates
                                        from (or terminates at) a pod running as a service
                                        account that matches the given label selector. If
                                        both Names and Selector are specified then they are
                                        AND'ed.
                                      type: string
                                  type: object
                              type: object
                            http:
                              description: HTTP contains match criteria that apply to HTTP
                                requests.
                              properties:
                                methods:
                                  description: Methods is an optional field that restricts
                                    the rule to apply only to HTTP requests that use one of
                                    the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple
                                    methods are OR'd together.
                                  items:
                                    type: string
                                  type: array
                                paths:
                                  description: 'Paths is an optional field that restricts
                                    the rule to apply to HTTP requests that use one of the
                                    listed HTTP Paths. Multiple paths are OR''d together.
                                    e.g: - exact: /foo - prefix: /bar NOTE: Each entry may
                                    ONLY specify either a `exact` or a `prefix` match. The
                                    validator will check for it.'
                                  items:
                                    description: 'HTTPPath specifies an HTTP path to match.
                                      It may be either of the form: exact: <path>: which matches
                                      the path exactly or prefix: <path-prefix>: which matches
                                      the path prefix'
                                    properties:
                                      exact:
                                        type: string
                                      prefix:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            icmp:
                              description: ICMP is an optional field that restricts the rule
                                to apply to a specific type and code of ICMP traffic.  This
                                should only be specified if the Protocol field is set to "ICMP"
                                or "ICMPv6".
                              properties:
                                code:
                                  description: Match on a specific ICMP code.  If specified,
                                    the Type value must also be specified. This is a technical
                                    limitation imposed by the kernel’s iptables firewall,
                                    which Calico uses to enforce the rule.
                                  type: integer
                                type:
                                  description: Match on a specific ICMP type.  For example
                                    a value of 8 refers to ICMP Echo Request (i.e. pings).
                                  type: integer
                              type: object
                            ipVersion:
                              description: IPVersion is an optional field that restricts the
                                rule to only match a specific IP version.
                              type: integer
                            metadata:
                              description: Metadata contains additional information for this
                                rule
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations is a set of key value pairs that
                                    give extra information about the rule
                                  type: object
                              type: object
                            notICMP:
                              description: NotICMP is the negated version of the ICMP field.
                              properties:
                                code:
                                  description: Match on a specific ICMP code.  If specified,
                                    the Type value must also be specified. This is a technical
                                    limitation imposed by the kernel’s iptables firewall,
                                    which Calico uses to enforce the rule.
                                  type: integer
                                type:
                                  description: Match on a specific ICMP type.  For example
                                    a value of 8 refers to ICMP Echo Request (i.e. pings).
                                  type: integer
                              type: object
                            notProtocol:
                              anyOf:
                              - type: integer
                              - type: string
                              description: NotProtocol is the negated version of the Protocol
                                field.
                              pattern: ^.*
                              x-kubernetes-int-or-string: true
                            protocol:
                              anyOf:
                              - type: integer
                              - type: string
                              description: "Protocol is an optional field that restricts the
                                rule to only apply to traffic of a specific IP protocol. Required
                                if any of the EntityRules contain Ports (because ports only
                                apply to certain protocols). \n Must be one of these string
                                values: \"TCP\", \"UDP\", \"ICMP\", \"ICMPv6\", \"SCTP\",
                                \"UDPLite\" or an integer in the range 1-255."
                              pattern: ^.*
                              x-kubernetes-int-or-string: true
                            source:
                              description: Source contains the match criteria that apply to
                                source entity.
                              properties:
                                domains:
                                  description: Domains is an optional field, valid for egress
                                    Allow rules only, that restricts the rule to apply only
                                    to traffic to one of the specified domains.  If this field
                                    is specified, Action must be Allow, and Nets and Selector
                                    must both be left empty.
                                  items:
                                    type: string
                                  type: array
                                namespaceSelector:
                                  description: "NamespaceSelector is an optional field that
                                    contains a selector expression. Only traffic that originates
                                    from (or terminates at) endpoints within the selected
                                    namespaces will be matched. When both NamespaceSelector
                                    and Selector are defined on the same rule, then only workload
                                    endpoints that are matched by both selectors will be selected
                                    by the rule. \n For NetworkPolicy, an empty NamespaceSelector
                                    implies that the Selector is limited to selecting only
                                    workload endpoints in the same namespace as the NetworkPolicy.
                                    \n For NetworkPolicy, `global()` NamespaceSelector implies
                                    that the Selector is limited to selecting only GlobalNetworkSet
                                    or HostEndpoint. \n For GlobalNetworkPolicy, an empty
                                    NamespaceSelector implies the Selector applies to workload
                                    endpoints across all namespaces."
                                  type: string
                                nets:
                                  description: Nets is an optional field that restricts the
                                    rule to only apply to traffic that originates from (or
                                    terminates at) IP addresses in any of the given subnets.
                                  items:
                                    type: string
                                  type: array
                                notNets:
                                  description: NotNets is the negated version of the Nets
                                    field.
                                  items:
                                    type: string
                                  type: array
                                notPorts:
                                  description: NotPorts is the negated version of the Ports
                                    field. Since only some protocols have ports, if any ports
                                    are specified it requires the Protocol match in the Rule
                                    to be set to "TCP" or "UDP".
                                  items:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^.*
                                    x-kubernetes-int-or-string: true
                                  type: array
                                notSelector:
                                  description: NotSelector is the negated version of the Selector
                                    field.  See Selector field for subtleties with negated
                                    selectors.
                                  type: string
                                ports:
                                  description: "Ports is an optional field that restricts
                                    the rule to only apply to traffic that has a source (destination)
                                    port that matches one of these ranges/values. This value
                                    is a list of integers or strings that represent ranges
                                    of ports. \n Since only some protocols have ports, if
                                    any ports are specified it requires the Protocol match
                                    in the Rule to be set to \"TCP\" or \"UDP\"."
                                  items:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^.*
                                    x-kubernetes-int-or-string: true
                                  type: array
                                selector:
                                  description: "Selector is an optional field that contains
                                    a selector expression (see Policy for sample syntax).
                                    \ Only traffic that originates from (terminates at) endpoints
                                    matching the selector will be matched. \n Note that: in
                                    addition to the negated version of the Selector (see NotSelector
                                    below), the selector expression syntax itself supports
                                    negation.  The two types of negation are subtly different.
                                    One negates the set of matched endpoints, the other negates
                                    the whole match: \n \tSelector = \"!has(my_label)\" matches
                                    packets that are from other Calico-controlled \tendpoints
                                    that do not have the label “my_label”. \n \tNotSelector
                                    = \"has(my_label)\" matches packets that are not from
                                    Calico-controlled \tendpoints that do have the label “my_label”.
                                    \n The effect is that the latter will accept packets from
                                    non-Calico sources whereas the former is limited to packets
                                    from Calico-controlled endpoints."
                                  type: string
                                serviceAccounts:
                                  description: ServiceAccounts is an optional field that restricts
                                    the rule to only apply to traffic that originates from
                                    (or terminates at) a pod running as a matching service
                                    account.
                                  properties:
                                    names:
                                      description: Names is an optional field that restricts
                                        the rule to only apply to traffic that originates
                                        from (or terminates at) a pod running as a service
                                        account whose name is in the list.
                                      items:
                                        type: string
                                      type: array
                                    selector:
                                      description: Selector is an optional field that restricts
                                        the rule to only apply to traffic that originates
                                        from (or terminates at) a pod running as a service
                                        account that matches the given label selector. If
                                        both Names and Selector are specified then they are
                                        AND'ed.
                                      type: string
                                  type: object
                              type: object
                          required:
                          - action
                          type: object
                        type: array
                      ingress:
                        description: The ordered set of ingress rules.  Each rule contains
                          a set of packet match criteria and a corresponding action to apply.
                        items:
                          description: "A Rule encapsulates a set of match criteria and an
                            action.  Both selector-based security Policy and security Profiles
                            reference rules - separated out as a list of rules for both ingress
                            and egress packet matching. \n Each positive match criteria has
                            a negated version, prefixed with ”Not”. All the match criteria
                            within a rule must be satisfied for a packet to match. A single
                            rule can contain the positive and negative version of a match
                            and both must be satisfied for the rule to match."
                          properties:
                            action:
                              type: string
                            destination:
                              description: Destination contains the match criteria that apply
                                to destination entity.
                              properties:
                                domains:
                                  description: Domains is an optional field, valid for egress
                                    Allow rules only, that restricts the rule to apply only
                                    to traffic to one of the specified domains.  If this field
                                    is specified, Action must be Allow, and Nets and Selector
                                    must both be left empty.
                                  items:
                                    type: string
                                  type: array
                                namespaceSelector:
                                  description: "NamespaceSelector is an optional field that
                                    contains a selector expression. Only traffic that originates
                                    from (or terminates at) endpoints within the selected
                                    namespaces will be matched. When both NamespaceSelector
                                    and Selector are defined on the same rule, then only workload
                                    endpoints that are matched by both selectors will be selected
                                    by the rule. \n For NetworkPolicy, an empty NamespaceSelector
                                    implies that the Selector is limited to selecting only
                                    workload endpoints in the same namespace as the NetworkPolicy.
                                    \n For NetworkPolicy, `global()` NamespaceSelector implies
                                    that the Selector is limited to selecting only GlobalNetworkSet
                                    or HostEndpoint. \n For GlobalNetworkPolicy, an empty
                                    NamespaceSelector implies the Selector applies to workload
                                    endpoints across all namespaces."
                                  type: string
                                nets:
                                  description: Nets is an optional field that restricts the
                                    rule to only apply to traffic that originates from (or
                                    terminates at) IP addresses in any of the given subnets.
                                  items:
                                    type: string
                                  type: array
                                notNets:
                                  description: NotNets is the negated version of the Nets
                                    field.
                                  items:
                                    type: string
                                  type: array
                                notPorts:
                                  description: NotPorts is the negated version of the Ports
                                    field. Since only some protocols have ports, if any ports
                                    are specified it requires the Protocol match in the Rule
                                    to be set to "TCP" or "UDP".
                                  items:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^.*
                                    x-kubernetes-int-or-string: true
                                  type: array
                                notSelector:
                                  description: NotSelector is the negated version of the Selector
                                    field.  See Selector field for subtleties with negated
                                    selectors.
                                  type: string
                                ports:
                                  description: "Ports is an optional field that restricts
                                    the rule to only apply to traffic that has a source (destination)
                                    port that matches one of these ranges/values. This value
                                    is a list of integers or strings that represent ranges
                                    of ports. \n Since only some protocols have ports, if
                                    any ports are specified it requires the Protocol match
                                    in the Rule to be set to \"TCP\" or \"UDP\"."
                                  items:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^.*
                                    x-kubernetes-int-or-string: true
                                  type: array
                                selector:
                                  description: "Selector is an optional field that contains
                                    a selector expression (see Policy for sample syntax).
                                    \ Only traffic that originates from (terminates at) endpoints
                                    matching the selector will be matched. \n Note that: in
                                    addition to the negated version of the Selector (see NotSelector
                                    below), the selector expression syntax itself supports
                                    negation.  The two types of negation are subtly different.
                                    One negates the set of matched endpoints, the other negates
                                    the whole match: \n \tSelector = \"!has(my_label)\" matches
                                    packets that are from other Calico-controlled \tendpoints
                                    that do not have the label “my_label”. \n \tNotSelector
                                    = \"has(my_label)\" matches packets that are not from
                                    Calico-controlled \tendpoints that do have the label “my_label”.
                                    \n The effect is that the latter will accept packets from
                                    non-Calico sources whereas the former is limited to packets
                                    from Calico-controlled endpoints."
                                  type: string
                                serviceAccounts:
                                  description: ServiceAccounts is an optional field that restricts
                                    the rule to only apply to traffic that originates from
                                    (or terminates at) a pod running as a matching service
                                    account.
                                  properties:
                                    names:
                                      description: Names is an optional field that restricts
                                        the rule to only apply to traffic that originates
                                        from (or terminates at) a pod running as a service
                                        account whose name is in the list.
                                      items:
                                        type: string
                                      type: array
                                    selector:
                                      description: Selector is an optional field that restricts
                                        the rule to only apply to traffic that originates
                                        from (or terminates at) a pod running as a service
                                        account that matches the given label selector. If
                                        both Names and Selector are specified then they are
                                        AND'ed.
                                      type: string
                                  type: object
                              type: object
                            http:
                              description: HTTP contains match criteria that apply to HTTP
                                requests.
                              properties:
                                methods:
                                  description: Methods is an optional field that restricts
                                    the rule to apply only to HTTP requests that use one of
                                    the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple
                                    methods are OR'd together.
                                  items:
                                    type: string
                                  type: array
                                paths:
                                  description: 'Paths is an optional field that restricts
                                    the rule to apply to HTTP requests that use one of the
                                    listed HTTP Paths. Multiple paths are OR''d together.
                                    e.g: - exact: /foo - prefix: /bar NOTE: Each entry may
                                    ONLY specify either a `exact` or a `prefix` match. The
                                    validator will check for it.'
                                  items:
                                    description: 'HTTPPath specifies an HTTP path to match.
                                      It may be either of the form: exact: <path>: which matches
                                      the path exactly or prefix: <path-prefix>: which matches
                                      the path prefix'
                                    properties:
                                      exact:
                                        type: string
                                      prefix:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            icmp:
                              description: ICMP is an optional field that restricts the rule
                                to apply to a specific type and code of ICMP traffic.  This
                                should only be specified if the Protocol field is set to "ICMP"
                                or "ICMPv6".
                              properties:
                                code:
                                  description: Match on a specific ICMP code.  If specified,
                                    the Type value must also be specified. This is a technical
                                    limitation imposed by the kernel’s iptables firewall,
                                    which Calico uses to enforce the rule.
                                  type: integer
                                type:
                                  description: Match on a specific ICMP type.  For example
                                    a value of 8 refers to ICMP Echo Request (i.e. pings).
                                  type: integer
                              type: object
                            ipVersion:
                              description: IPVersion is an optional field that restricts the
                                rule to only match a specific IP version.
                              type: integer
                            metadata:
                              description: Metadata contains additional information for this
                                rule
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations is a set of key value pairs that
                                    give extra information about the rule
                                  type: object
                              type: object
                            notICMP:
                              description: NotICMP is the negated version of the ICMP field.
                              properties:
                                code:
                                  description: Match on a specific ICMP code.  If specified,
                                    the Type value must also be specified. This is a technical
                                    limitation imposed by the kernel’s iptables firewall,
                                    which Calico uses to enforce the rule.
                                  type: integer
                                type:
                                  description: Match on a specific ICMP type.  For example
                                    a value of 8 refers to ICMP Echo Request (i.e. pings).
                                  type: integer
                              type: object
                            notProtocol:
                              anyOf:
                              - type: integer
                              - type: string
                              description: NotProtocol is the negated version of the Protocol
                                field.
                              pattern: ^.*
                              x-kubernetes-int-or-string: true
                            protocol:
                              anyOf:
                              - type: integer
                              - type: string
                              description: "Protocol is an optional field that restricts the
                                rule to only apply to traffic of a specific IP protocol. Required
                                if any of the EntityRules contain Ports (because ports only
                                apply to certain protocols). \n Must be one of these string
                                values: \"TCP\", \"UDP\", \"ICMP\", \"ICMPv6\", \"SCTP\",
                                \"UDPLite\" or an integer in the range 1-255."
                              pattern: ^.*
                              x-kubernetes-int-or-string: true
                            source:
                              description: Source contains the match criteria that apply to
                                source entity.
                              properties:
                                domains:
                                  description: Domains is an optional field, valid for egress
                                    Allow rules only, that restricts the rule to apply only
                                    to traffic to one of the specified domains.  If this field
                                    is specified, Action must be Allow, and Nets and Selector
                                    must both be left empty.
                                  items:
                                    type: string
                                  type: array
                                namespaceSelector:
                                  description: "NamespaceSelector is an optional field that
                                    contains a selector expression. Only traffic that originates
                                    from (or terminates at) endpoints within the selected
                                    namespaces will be matched. When both NamespaceSelector
                                    and Selector are defined on the same rule, then only workload
                                    endpoints that are matched by both selectors will be selected
                                    by the rule. \n For NetworkPolicy, an empty NamespaceSelector
                                    implies that the Selector is limited to selecting only
                                    workload endpoints in the same namespace as the NetworkPolicy.
                                    \n For NetworkPolicy, `global()` NamespaceSelector implies
                                    that the Selector is limited to selecting only GlobalNetworkSet
                                    or HostEndpoint. \n For GlobalNetworkPolicy, an empty
                                    NamespaceSelector implies the Selector applies to workload
                                    endpoints across all namespaces."
                                  type: string
                                nets:
                                  description: Nets is an optional field that restricts the
                                    rule to only apply to traffic that originates from (or
                                    terminates at) IP addresses in any of the given subnets.
                                  items:
                                    type: string
                                  type: array
                                notNets:
                                  description: NotNets is the negated version of the Nets
                                    field.
                                  items:
                                    type: string
                                  type: array
                                notPorts:
                                  description: NotPorts is the negated version of the Ports
                                    field. Since only some protocols have ports, if any ports
                                    are specified it requires the Protocol match in the Rule
                                    to be set to "TCP" or "UDP".
                                  items:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^.*
                                    x-kubernetes-int-or-string: true
                                  type: array
                                notSelector:
                                  description: NotSelector is the negated version of the Selector
                                    field.  See Selector field for subtleties with negated
                                    selectors.
                                  type: string
                                ports:
                                  description: "Ports is an optional field that restricts
                                    the rule to only apply to traffic that has a source (destination)
                                    port that matches one of these ranges/values. This value
                                    is a list of integers or strings that represent ranges
                                    of ports. \n Since only some protocols have ports, if
                                    any ports are specified it requires the Protocol match
                                    in the Rule to be set to \"TCP\" or \"UDP\"."
                                  items:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^.*
                                    x-kubernetes-int-or-string: true
                                  type: array
                                selector:
                                  description: "Selector is an optional field that contains
                                    a selector expression (see Policy for sample syntax).
                                    \ Only traffic that originates from (terminates at) endpoints
                                    matching the selector will be matched. \n Note that: in
                                    addition to the negated version of the Selector (see NotSelector
                                    below), the selector expression syntax itself supports
                                    negation.  The two types of negation are subtly different.
                                    One negates the set of matched endpoints, the other negates
                                    the whole match: \n \tSelector = \"!has(my_label)\" matches
                                    packets that are from other Calico-controlled \tendpoints
                                    that do not have the label “my_label”. \n \tNotSelector
                                    = \"has(my_label)\" matches packets that are not from
                                    Calico-controlled \tendpoints that do have the label “my_label”.
                                    \n The effect is that the latter will accept packets from
                                    non-Calico sources whereas the former is limited to packets
                                    from Calico-controlled endpoints."
                                  type: string
                                serviceAccounts:
                                  description: ServiceAccounts is an optional field that restricts
                                    the rule to only apply to traffic that originates from
                                    (or terminates at) a pod running as a matching service
                                    account.
                                  properties:
                                    names:
                                      description: Names is an optional field that restricts
                                        the rule to only apply to traffic that originates
                                        from (or terminates at) a pod running as a service
                                        account whose name is in the list.
                                      items:
                                        type: string
                                      type: array
                                    selector:
                                      description: Selector is an optional field that restricts
                                        the rule to only apply to traffic that originates
                                        from (or terminates at) a pod running as a service
                                        account that matches the given label selector. If
                                        both Names and Selector are specified then they are
                                        AND'ed.
                                      type: string
                                  type: object
                              type: object
                          required:
                          - action
                          type: object
                        type: array
                      order:
                        description: Order is an optional field that specifies the order in
                          which the policy is applied. Policies with higher "order" are applied
                          after those with lower order within the same tier.  If the order
                          is omitted, it may be considered to be "infinite" - i.e. the policy
                          will be applied last.  Policies with identical order will be applied
                          in alphanumerical order based on the Policy "Name" within the tier.
                        type: number
                      selector:
                        description: "The selector is an expression used to pick pick out
                          the endpoints that the policy should be applied to. \n Selector
                          expressions follow this syntax: \n \tlabel == \"string_literal\"
                          \ ->  comparison, e.g. my_label == \"foo bar\" \tlabel != \"string_literal\"
                          \  ->  not equal; also matches if label is not present \tlabel in
                          { \"a\", \"b\", \"c\", ... }  ->  true if the value of label X is
                          one of \"a\", \"b\", \"c\" \tlabel not in { \"a\", \"b\", \"c\",
                          ... }  ->  true if the value of label X is not one of \"a\", \"b\",
                          \"c\" \thas(label_name)  -> True if that label is present \t! expr
                          -> negation of expr \texpr && expr  -> Short-circuit and \texpr
                          || expr  -> Short-circuit or \t( expr ) -> parens for grouping \tall()
                          or the empty selector -> matches all endpoints. \n Label names are
                          allowed to contain alphanumerics, -, _ and /. String literals are
                          more permissive but they do not support escape characters. \n Examples
                          (with made-up labels): \n \ttype == \"webserver\" && deployment
                          == \"prod\" \ttype in {\"frontend\", \"backend\"} \tdeployment !=
                          \"dev\" \t! has(label_name)"
                        type: string
                      serviceAccountSelector:
                        description: ServiceAccountSelector is an optional field for an expression
                          used to select a pod based on service accounts.
                        type: string
                      stagedAction:
                        description: The staged action. If this is omitted, the default is
                          Set.
                        type: string
                      tier:
                        description: The name of the tier that this policy belongs to.  If
                          this is omitted, the default tier (name is "default") is assumed.  The
                          specified tier must exist in order to create security policies within
                          the tier, the "default" tier is created automatically if it does
                          not exist, this means for deployments requiring only a single Tier,
                          the tier name may be omitted on all policy management requests.
                        type: string
                      types:
                        description: "Types indicates whether this policy applies to ingress,
                          or to egress, or to both.  When not explicitly specified (and so
                          the value on creation is empty or nil), Calico defaults Types according
                          to what Ingress and Egress are present in the policy.  The default
                          is: \n - [ PolicyTypeIngress ], if there are no Egress rules (including
                          the case where there are   also no Ingress rules) \n - [ PolicyTypeEgress
                          ], if there are Egress rules but no Ingress rules \n - [ PolicyTypeIngress,
                          PolicyTypeEgress ], if there are both Ingress and Egress rules.
                          \n When the policy is read back again, Types will always be one
                          of these values, never empty or nil."
                        items:
                          description: PolicyType enumerates the possible values of the PolicySpec
                            Types field.
                          type: string
                        type: array
                    type: object
                type: object
            served: true
            storage: true
        status:
          acceptedNames:
            kind: ""
            plural: ""
          conditions: []
          storedVersions: []

  TiersCRD:
    Type: "Custom::KubeManifest"
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: (devel)
          name: tiers.crd.projectcalico.org
        spec:
          group: crd.projectcalico.org
          names:
            kind: Tier
            listKind: TierList
            plural: tiers
            singular: tier
          scope: Cluster
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: TierSpec contains the specification for a security policy
                      tier resource.
                    properties:
                      order:
                        description: Order is an optional field that specifies the order in
                          which the tier is applied. Tiers with higher "order" are applied
                          after those with lower order.  If the order is omitted, it may be
                          considered to be "infinite" - i.e. the tier will be applied last.  Tiers
                          with identical order will be applied in alphanumerical order based
                          on the Tier "Name".
                        type: number
                    type: object
                type: object
            served: true
            storage: true
        status:
          acceptedNames:
            kind: ""
            plural: ""
          conditions: []
          storedVersions: []

  APMServerCRD:
    Type: "Custom::KubeManifest"
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apiextensions.k8s.io/v1beta1
        kind: CustomResourceDefinition
        metadata:
          name: apmservers.apm.k8s.elastic.co
          annotations:
            "helm.sh/hook": "crd-install"
        spec:
          additionalPrinterColumns:
            - JSONPath: .status.health
              name: health
              type: string
            - JSONPath: .status.availableNodes
              description: Available nodes
              name: nodes
              type: integer
            - JSONPath: .spec.version
              description: APM version
              name: version
              type: string
            - JSONPath: .metadata.creationTimestamp
              name: age
              type: date
          group: apm.k8s.elastic.co
          names:
            categories:
              - elastic
            kind: ApmServer
            listKind: ApmServerList
            plural: apmservers
            shortNames:
              - apm
            singular: apmserver
          scope: Namespaced
          subresources:
            status: {}
          validation:
            openAPIV3Schema:
              description: ApmServer represents an APM Server resource in a Kubernetes cluster.
              properties:
                apiVersion:
                  description: 'APIVersion defines the versioned schema of this representation
                    of an object. Servers should convert recognized schemas to the latest
                    internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                  type: string
                kind:
                  description: 'Kind is a string value representing the REST resource this
                    object represents. Servers may infer this from the endpoint the client
                    submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                metadata:
                  type: object
                spec:
                  description: ApmServerSpec holds the specification of an APM Server.
                  properties:
                    config:
                      description: 'Config holds the APM Server configuration. See: https://www.elastic.co/guide/en/apm/server/current/configuring-howto-apm-server.html'
                      type: object
                    count:
                      description: Count of APM Server instances to deploy.
                      format: int32
                      type: integer
                    elasticsearchRef:
                      description: ElasticsearchRef is a reference to the output Elasticsearch
                        cluster running in the same Kubernetes cluster.
                      properties:
                        name:
                          description: Name of the Kubernetes object.
                          type: string
                        namespace:
                          description: Namespace of the Kubernetes object. If empty, defaults
                            to the current namespace.
                          type: string
                      required:
                        - name
                      type: object
                    http:
                      description: HTTP holds the HTTP layer configuration for the APM Server
                        resource.
                      properties:
                        service:
                          description: Service defines the template for the associated Kubernetes
                            Service object.
                          properties:
                            metadata:
                              description: ObjectMeta is the metadata of the service. The
                                name and namespace provided here are managed by ECK and will
                                be ignored.
                              type: object
                            spec:
                              description: Spec is the specification of the service.
                              properties:
                                clusterIP:
                                  description: 'clusterIP is the IP address of the service
                                    and is usually assigned randomly by the master. If an
                                    address is specified manually and is not in use by others,
                                    it will be allocated to the service; otherwise, creation
                                    of the service will fail. This field can not be changed
                                    through updates. Valid values are "None", empty string
                                    (""), or a valid IP address. "None" can be specified for
                                    headless services when proxying is not required. Only
                                    applies to types ClusterIP, NodePort, and LoadBalancer.
                                    Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
                                  type: string
                                externalIPs:
                                  description: externalIPs is a list of IP addresses for which
                                    nodes in the cluster will also accept traffic for this
                                    service.  These IPs are not managed by Kubernetes.  The
                                    user is responsible for ensuring that traffic arrives
                                    at a node with this IP.  A common example is external
                                    load-balancers that are not part of the Kubernetes system.
                                  items:
                                    type: string
                                  type: array
                                externalName:
                                  description: externalName is the external reference that
                                    kubedns or equivalent will return as a CNAME record for
                                    this service. No proxying will be involved. Must be a
                                    valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123)
                                    and requires Type to be ExternalName.
                                  type: string
                                externalTrafficPolicy:
                                  description: externalTrafficPolicy denotes if this Service
                                    desires to route external traffic to node-local or cluster-wide
                                    endpoints. "Local" preserves the client source IP and
                                    avoids a second hop for LoadBalancer and Nodeport type
                                    services, but risks potentially imbalanced traffic spreading.
                                    "Cluster" obscures the client source IP and may cause
                                    a second hop to another node, but should have good overall
                                    load-spreading.
                                  type: string
                                healthCheckNodePort:
                                  description: healthCheckNodePort specifies the healthcheck
                                    nodePort for the service. If not specified, HealthCheckNodePort
                                    is created by the service api backend with the allocated
                                    nodePort. Will use user-specified nodePort value if specified
                                    by the client. Only effects when Type is set to LoadBalancer
                                    and ExternalTrafficPolicy is set to Local.
                                  format: int32
                                  type: integer
                                ipFamily:
                                  description: ipFamily specifies whether this Service has
                                    a preference for a particular IP family (e.g. IPv4 vs.
                                    IPv6).  If a specific IP family is requested, the clusterIP
                                    field will be allocated from that family, if it is available
                                    in the cluster.  If no IP family is requested, the cluster's
                                    primary IP family will be used. Other IP fields (loadBalancerIP,
                                    loadBalancerSourceRanges, externalIPs) and controllers
                                    which allocate external load-balancers should use the
                                    same IP family.  Endpoints for this Service will be of
                                    this family.  This field is immutable after creation.
                                    Assigning a ServiceIPFamily not available in the cluster
                                    (e.g. IPv6 in IPv4 only cluster) is an error condition
                                    and will fail during clusterIP assignment.
                                  type: string
                                loadBalancerIP:
                                  description: 'Only applies to Service Type: LoadBalancer
                                    LoadBalancer will get created with the IP specified in
                                    this field. This feature depends on whether the underlying
                                    cloud-provider supports specifying the loadBalancerIP
                                    when a load balancer is created. This field will be ignored
                                    if the cloud-provider does not support the feature.'
                                  type: string
                                loadBalancerSourceRanges:
                                  description: 'If specified and supported by the platform,
                                    this will restrict traffic through the cloud-provider
                                    load-balancer will be restricted to the specified client
                                    IPs. This field will be ignored if the cloud-provider
                                    does not support the feature." More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/'
                                  items:
                                    type: string
                                  type: array
                                ports:
                                  description: 'The list of ports that are exposed by this
                                    service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
                                  items:
                                    description: ServicePort contains information on service's
                                      port.
                                    properties:
                                      name:
                                        description: The name of this port within the service.
                                          This must be a DNS_LABEL. All ports within a ServiceSpec
                                          must have unique names. When considering the endpoints
                                          for a Service, this must match the 'name' field
                                          in the EndpointPort. Optional if only one ServicePort
                                          is defined on this service.
                                        type: string
                                      nodePort:
                                        description: 'The port on each node on which this
                                          service is exposed when type=NodePort or LoadBalancer.
                                          Usually assigned by the system. If specified, it
                                          will be allocated to the service if unused or else
                                          creation of the service will fail. Default is to
                                          auto-allocate a port if the ServiceType of this
                                          Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                                        format: int32
                                        type: integer
                                      port:
                                        description: The port that will be exposed by this
                                          service.
                                        format: int32
                                        type: integer
                                      protocol:
                                        description: The IP protocol for this port. Supports
                                          "TCP", "UDP", and "SCTP". Default is TCP.
                                        type: string
                                      targetPort:
                                        anyOf:
                                          - type: string
                                          - type: integer
                                        description: 'Number or name of the port to access
                                          on the pods targeted by the service. Number must
                                          be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                          If this is a string, it will be looked up as a named
                                          port in the target Pod''s container ports. If this
                                          is not specified, the value of the ''port'' field
                                          is used (an identity map). This field is ignored
                                          for services with clusterIP=None, and should be
                                          omitted or set equal to the ''port'' field. More
                                          info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                                    required:
                                      - port
                                    type: object
                                  type: array
                                publishNotReadyAddresses:
                                  description: publishNotReadyAddresses, when set to true,
                                    indicates that DNS implementations must publish the notReadyAddresses
                                    of subsets for the Endpoints associated with the Service.
                                    The default value is false. The primary use case for setting
                                    this field is to use a StatefulSet's Headless Service
                                    to propagate SRV records for its Pods without respect
                                    to their readiness for purpose of peer discovery.
                                  type: boolean
                                selector:
                                  additionalProperties:
                                    type: string
                                  description: 'Route service traffic to pods with label keys
                                    and values matching this selector. If empty or not present,
                                    the service is assumed to have an external process managing
                                    its endpoints, which Kubernetes will not modify. Only
                                    applies to types ClusterIP, NodePort, and LoadBalancer.
                                    Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/'
                                  type: object
                                sessionAffinity:
                                  description: 'Supports "ClientIP" and "None". Used to maintain
                                    session affinity. Enable client IP based session affinity.
                                    Must be ClientIP or None. Defaults to None. More info:
                                    https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
                                  type: string
                                sessionAffinityConfig:
                                  description: sessionAffinityConfig contains the configurations
                                    of session affinity.
                                  properties:
                                    clientIP:
                                      description: clientIP contains the configurations of
                                        Client IP based session affinity.
                                      properties:
                                        timeoutSeconds:
                                          description: timeoutSeconds specifies the seconds
                                            of ClientIP type session sticky time. The value
                                            must be >0 && <=86400(for 1 day) if ServiceAffinity
                                            == "ClientIP". Default value is 10800(for 3 hours).
                                          format: int32
                                          type: integer
                                      type: object
                                  type: object
                                type:
                                  description: 'type determines how the Service is exposed.
                                    Defaults to ClusterIP. Valid options are ExternalName,
                                    ClusterIP, NodePort, and LoadBalancer. "ExternalName"
                                    maps to the specified externalName. "ClusterIP" allocates
                                    a cluster-internal IP address for load-balancing to endpoints.
                                    Endpoints are determined by the selector or if that is
                                    not specified, by manual construction of an Endpoints
                                    object. If clusterIP is "None", no virtual IP is allocated
                                    and the endpoints are published as a set of endpoints
                                    rather than a stable IP. "NodePort" builds on ClusterIP
                                    and allocates a port on every node which routes to the
                                    clusterIP. "LoadBalancer" builds on NodePort and creates
                                    an external load-balancer (if supported in the current
                                    cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types'
                                  type: string
                              type: object
                          type: object
                        tls:
                          description: TLS defines options for configuring TLS for HTTP.
                          properties:
                            certificate:
                              description: "Certificate is a reference to a Kubernetes secret
                                that contains the certificate and private key for enabling
                                TLS. The referenced secret should contain the following: \n
                                - `ca.crt`: The certificate authority (optional). - `tls.crt`:
                                The certificate (or a chain). - `tls.key`: The private key
                                to the first certificate in the certificate chain."
                              properties:
                                secretName:
                                  description: SecretName is the name of the secret.
                                  type: string
                              type: object
                            selfSignedCertificate:
                              description: SelfSignedCertificate allows configuring the self-signed
                                certificate generated by the operator.
                              properties:
                                disabled:
                                  description: Disabled indicates that the provisioning of
                                    the self-signed certifcate should be disabled.
                                  type: boolean
                                subjectAltNames:
                                  description: SubjectAlternativeNames is a list of SANs to
                                    include in the generated HTTP TLS certificate.
                                  items:
                                    description: SubjectAlternativeName represents a SAN entry
                                      in a x509 certificate.
                                    properties:
                                      dns:
                                        description: DNS is the DNS name of the subject.
                                        type: string
                                      ip:
                                        description: IP is the IP address of the subject.
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                      type: object
                    image:
                      description: Image is the APM Server Docker image to deploy.
                      type: string
                    podTemplate:
                      description: PodTemplate provides customisation options (labels, annotations,
                        affinity rules, resource requests, and so on) for the APM Server pods.
                      type: object
                    secureSettings:
                      description: 'SecureSettings is a list of references to Kubernetes secrets
                        containing sensitive configuration options for APM Server. See: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-apm-server.html#k8s-apm-secure-settings'
                      items:
                        description: SecretSource defines a data source based on a Kubernetes
                          Secret.
                        properties:
                          entries:
                            description: Entries define how to project each key-value pair
                              in the secret to filesystem paths. If not defined, all keys
                              will be projected to similarly named paths in the filesystem.
                              If defined, only the specified keys will be projected to the
                              corresponding paths.
                            items:
                              description: KeyToPath defines how to map a key in a Secret
                                object to a filesystem path.
                              properties:
                                key:
                                  description: Key is the key contained in the secret.
                                  type: string
                                path:
                                  description: Path is the relative file path to map the key
                                    to. Path must not be an absolute file path and must not
                                    contain any ".." components.
                                  type: string
                              required:
                                - key
                              type: object
                            type: array
                          secretName:
                            description: SecretName is the name of the secret.
                            type: string
                        required:
                          - secretName
                        type: object
                      type: array
                    version:
                      description: Version of the APM Server.
                      type: string
                  type: object
                status:
                  description: ApmServerStatus defines the observed state of ApmServer
                  properties:
                    associationStatus:
                      description: Association is the status of any auto-linking to Elasticsearch
                        clusters.
                      type: string
                    availableNodes:
                      format: int32
                      type: integer
                    health:
                      description: ApmServerHealth expresses the status of the Apm Server
                        instances.
                      type: string
                    secretTokenSecret:
                      description: SecretTokenSecretName is the name of the Secret that contains
                        the secret token
                      type: string
                    service:
                      description: ExternalService is the name of the service the agents should
                        connect to.
                      type: string
                  type: object
          version: v1
          versions:
            - name: v1
              served: true
              storage: true
            - name: v1beta1
              served: true
              storage: false
            - name: v1alpha1
              served: true
              storage: false
        status:
          acceptedNames:
            kind: ""
            plural: ""
          conditions: []
          storedVersions: []
