AWSTemplateFormatVersion: "2010-09-09"
Description: Deploys Calico operator CRDs and components (qs-1r6eslplj)
Metadata:
  QuickStartDocumentation:
    EntrypointName: "Launch Calico Operator"
    Order: 4
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Calico for EKS
        Parameters:
          - KubeClusterName
    ParameterLabels:
      KubeClusterName:
        default: EKS cluster name
Parameters:
  KubeClusterName:
    Type: String
    Description: Name of the EKS cluster in which to deploy Calico.
  ProductVariant:
    Type: String
    Default: Calico
    AllowedValues:
      - Calico
      - CalicoEnterprise
    Description: Whether to install Calico or Calico Enterprise.

Conditions:
  IsEnterprise: !Equals [ !Ref ProductVariant, CalicoEnterprise ]
  IsNotEnterprise: !Equals [ !Ref ProductVariant, Calico ]

Resources:
  #####################################################################################
  # operator.tigera.io/v1 CRDs
  #####################################################################################
  InstallationCRD:
    Type: "Custom::KubeManifest"
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: installations.operator.tigera.io
        spec:
          group: operator.tigera.io
          names:
            kind: Installation
            listKind: InstallationList
            plural: installations
            singular: installation
          scope: Cluster
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                description: Installation configures an installation of Calico or Calico Enterprise.
                  At most one instance of this resource is supported. It must be named "default".
                  The Installation API installs core networking and network policy components,
                  and provides general install-time configuration.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: Specification of the desired state for the Calico or Calico
                      Enterprise installation.
                    properties:
                      calicoNetwork:
                        description: CalicoNetwork specifies configuration options for Calico
                          provided pod networking.
                        properties:
                          hostPorts:
                            description: 'HostPorts configures whether or not Calico will
                              support Kubernetes HostPorts. Default: Enabled'
                            enum:
                            - Enabled
                            - Disabled
                            type: string
                          ipPools:
                            description: IPPools contains a list of IP pools to use for allocating
                              pod IP addresses. At most one IP pool may be specified. If omitted,
                              a single pool will be configured when needed.
                            items:
                              properties:
                                blockSize:
                                  description: 'BlockSize specifies the CIDR prefex length
                                    to use when allocating per-node IP blocks from the main
                                    IP pool CIDR. Default: 26 (IPv4), 122 (IPv6)'
                                  format: int32
                                  type: integer
                                cidr:
                                  description: CIDR contains the address range for the IP
                                    Pool in classless inter-domain routing format.
                                  type: string
                                encapsulation:
                                  description: 'Encapsulation specifies the encapsulation
                                    type that will be used with the IP Pool. Default: IPIP'
                                  enum:
                                  - IPIPCrossSubnet
                                  - IPIP
                                  - VXLAN
                                  - VXLANCrossSubnet
                                  - None
                                  type: string
                                natOutgoing:
                                  description: 'NATOutgoing specifies if NAT will be enabled
                                    or disabled for outgoing traffic. Default: Enabled'
                                  enum:
                                  - Enabled
                                  - Disabled
                                  type: string
                                nodeSelector:
                                  description: 'NodeSelector specifies the node selector that
                                    will be set for the IP Pool. Default: ''all()'''
                                  type: string
                              required:
                              - cidr
                              type: object
                            type: array
                          mtu:
                            description: 'MTU specifies the maximum transmission unit to use
                              for pods on the Calico network. Default: 1410'
                            format: int32
                            type: integer
                          multiInterfaceMode:
                            description: 'MultiInterfaceMode configures what will configure
                              multiple interface per pod. Only valid for Calico Enterprise
                              installations. Default: None'
                            enum:
                            - None
                            - Multus
                            type: string
                          nodeAddressAutodetectionV4:
                            description: NodeAddressAutodetectionV4 specifies an approach
                              to automatically detect node IPv4 addresses. If not specified,
                              will use default auto-detection settings to acquire an IPv4
                              address for each node.
                            properties:
                              canReach:
                                description: CanReach enables IP auto-detection based on which
                                  source address on the node is used to reach the specified
                                  IP or domain.
                                type: string
                              firstFound:
                                description: FirstFound uses default interface matching parameters
                                  to select an interface, performing best-effort filtering
                                  based on well-known interface names.
                                type: boolean
                              interface:
                                description: Interface enables IP auto-detection based on
                                  interfaces that match the given regex.
                                type: string
                              skipInterface:
                                description: SkipInterface enables IP auto-detection based
                                  on interfaces that do not match the given regex.
                                type: string
                            type: object
                          nodeAddressAutodetectionV6:
                            description: NodeAddressAutodetectionV6 specifies an approach
                              to automatically detect node IPv4 addresses. If not specified,
                              IPv6 addresses will not be auto-detected.
                            properties:
                              canReach:
                                description: CanReach enables IP auto-detection based on which
                                  source address on the node is used to reach the specified
                                  IP or domain.
                                type: string
                              firstFound:
                                description: FirstFound uses default interface matching parameters
                                  to select an interface, performing best-effort filtering
                                  based on well-known interface names.
                                type: boolean
                              interface:
                                description: Interface enables IP auto-detection based on
                                  interfaces that match the given regex.
                                type: string
                              skipInterface:
                                description: SkipInterface enables IP auto-detection based
                                  on interfaces that do not match the given regex.
                                type: string
                            type: object
                        type: object
                      clusterManagementType:
                        description: 'How the cluster is managed. Valid values for this field
                          are: Standalone, Management, Managed. Standalone clusters are fully
                          self-contained installations of Calico Enterprise. Management clusters
                          provide a single view to manage any number of Managed clusters,
                          which are a lighter weight installation. This option is applicable
                          only when variant is TigeraSecureEnterprise. Default: Standalone'
                        enum:
                        - Standalone
                        - Management
                        - Managed
                        type: string
                      componentResources:
                        description: ComponentResources can be used to customize the resource
                          requirements for each component.
                        items:
                          description: The ComponentResource struct associates a ResourceRequirements
                            with a component by name
                          properties:
                            componentName:
                              description: ComponentName CRD enum
                              enum:
                              - Node
                              - Typha
                              - KubeControllers
                              type: string
                            resourceRequirements:
                              description: ResourceRequirements describes the compute resource
                                requirements.
                              properties:
                                limits:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Limits describes the maximum amount of compute
                                    resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Requests describes the minimum amount of compute
                                    resources required. If Requests is omitted for a container,
                                    it defaults to Limits if that is explicitly specified,
                                    otherwise to an implementation-defined value. More info:
                                    https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                  type: object
                              type: object
                          required:
                          - componentName
                          - resourceRequirements
                          type: object
                        type: array
                      controlPlaneNodeSelector:
                        additionalProperties:
                          type: string
                        description: ControlPlaneNodeSelector is used to select control plane
                          nodes on which to run specific Calico components. This currently
                          only applies to kube-controllers and the apiserver.
                        type: object
                      flexVolumePath:
                        description: FlexVolumePath optionally specifies a custom path for
                          FlexVolume. If not specified, FlexVolume will be enabled by default.
                          If set to 'None', FlexVolume will be disabled. The default is based
                          on the kubernetesProvider.
                        type: string
                      imagePath:
                        description: "ImagePath allows for the path part of an image to be
                          specified. If specified then the specified value will be used as
                          the image path for each image. If not specified or empty, the default
                          for each image will be used. \n Image format:    `<registry>/<imagePath>/<imageName>:<image-tag>`
                          \n This option allows configuring the `<imagePath>` portion of the
                          above format."
                        type: string
                      imagePullSecrets:
                        description: ImagePullSecrets is an array of references to container
                          registry pull secrets to use. These are applied to all images to
                          be pulled.
                        items:
                          description: LocalObjectReference contains enough information to
                            let you locate the referenced object inside the same namespace.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        type: array
                      kubernetesProvider:
                        description: KubernetesProvider specifies a particular provider of
                          the Kubernetes platform and enables provider-specific configuration.
                          If the specified value is empty, the Operator will attempt to automatically
                          determine the current provider. If the specified value is not empty,
                          the Operator will still attempt auto-detection, but will additionally
                          compare the auto-detected value to the specified value to confirm
                          they match.
                        enum:
                        - EKS
                        - GKE
                        - AKS
                        - OpenShift
                        - DockerEnterprise
                        type: string
                      nodeMetricsPort:
                        description: NodeMetricsPort specifies which port calico/node serves
                          prometheus metrics on. By default, metrics are not enabled. If specified,
                          this overrides any FelixConfiguration resources which may exist.
                          If omitted, then prometheus metrics may still be configured through
                          FelixConfiguration.
                        format: int32
                        type: integer
                      nodeUpdateStrategy:
                        description: NodeUpdateStrategy can be used to customize the desired
                          update strategy, such as the MaxUnavailable field.
                        properties:
                          rollingUpdate:
                            description: 'Rolling update config params. Present only if type
                              = "RollingUpdate". --- TODO: Update this to follow our convention
                              for oneOf, whatever we decide it to be. Same as Deployment `strategy.rollingUpdate`.
                              See https://github.com/kubernetes/kubernetes/issues/35345'
                            properties:
                              maxUnavailable:
                                anyOf:
                                - type: integer
                                - type: string
                                description: 'The maximum number of DaemonSet pods that can
                                  be unavailable during the update. Value can be an absolute
                                  number (ex: 5) or a percentage of total number of DaemonSet
                                  pods at the start of the update (ex: 10%). Absolute number
                                  is calculated from percentage by rounding up. This cannot
                                  be 0. Default value is 1. Example: when this is set to 30%,
                                  at most 30% of the total number of nodes that should be
                                  running the daemon pod (i.e. status.desiredNumberScheduled)
                                  can have their pods stopped for an update at any given time.
                                  The update starts by stopping at most 30% of those DaemonSet
                                  pods and then brings up new DaemonSet pods in their place.
                                  Once the new pods are available, it then proceeds onto other
                                  DaemonSet pods, thus ensuring that at least 70% of original
                                  number of DaemonSet pods are available at all times during
                                  the update.'
                                x-kubernetes-int-or-string: true
                            type: object
                          type:
                            description: Type of daemon set update. Can be "RollingUpdate"
                              or "OnDelete". Default is RollingUpdate.
                            type: string
                        type: object
                      registry:
                        description: "Registry is the default Docker registry used for component
                          Docker images. If specified, all images will be pulled from this
                          registry. If not specified then the default registries will be used.
                          \n Image format:    `<registry>/<imagePath>/<imageName>:<image-tag>`
                          \n This option allows configuring the `<registry>` portion of the
                          above format."
                        type: string
                      variant:
                        description: 'Variant is the product to install - one of Calico or
                          TigeraSecureEnterprise Default: Calico'
                        enum:
                        - Calico
                        - TigeraSecureEnterprise
                        type: string
                    type: object
                  status:
                    description: Most recently observed state for the Calico or Calico Enterprise
                      installation.
                    properties:
                      variant:
                        description: Variant is the most recently observed installed variant
                          - one of Calico or TigeraSecureEnterprise
                        enum:
                        - Calico
                        - TigeraSecureEnterprise
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}

  TigeraStatusCRD:
    Type: "Custom::KubeManifest"
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: tigerastatuses.operator.tigera.io
        spec:
          group: operator.tigera.io
          names:
            kind: TigeraStatus
            listKind: TigeraStatusList
            plural: tigerastatuses
            singular: tigerastatus
          scope: Cluster
          versions:
          - additionalPrinterColumns:
            - description: Whether the component running and stable.
              jsonPath: .status.conditions[?(@.type=='Available')].status
              name: Available
              type: string
            - description: Whether the component is processing changes.
              jsonPath: .status.conditions[?(@.type=='Progressing')].status
              name: Progressing
              type: string
            - description: Whether the component is degraded.
              jsonPath: .status.conditions[?(@.type=='Degraded')].status
              name: Degraded
              type: string
            - description: The time the component's Available status last changed.
              jsonPath: .status.conditions[?(@.type=='Available')].lastTransitionTime
              name: Since
              type: date
            name: v1
            schema:
              openAPIV3Schema:
                description: TigeraStatus represents the most recently observed status for
                  Calico or a Calico Enterprise functional area.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    type: object
                  status:
                    description: TigeraStatusStatus defines the observed state of TigeraStatus
                    properties:
                      conditions:
                        description: Conditions represents the latest observed set of conditions
                          for this component. A component may be one or more of Available,
                          Progressing, or Degraded.
                        items:
                          description: TigeraStatusCondition represents a condition attached
                            to a particular component.
                          properties:
                            lastTransitionTime:
                              description: The timestamp representing the start time for the
                                current status.
                              format: date-time
                              type: string
                            message:
                              description: Optionally, a detailed message providing additional
                                context.
                              type: string
                            reason:
                              description: A brief reason explaining the condition.
                              type: string
                            status:
                              description: The status of the condition. May be True, False,
                                or Unknown.
                              type: string
                            type:
                              description: The type of condition. May be Available, Progressing,
                                or Degraded.
                              type: string
                          required:
                          - lastTransitionTime
                          - status
                          - type
                          type: object
                        type: array
                    required:
                    - conditions
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}

  AmazonCloudIntegrationsCRD:
    Type: "Custom::KubeManifest"
    Condition: IsEnterprise
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: amazoncloudintegrations.operator.tigera.io
          annotations:
            helm.sh/hook: crd-install
        spec:
          group: operator.tigera.io
          names:
            kind: AmazonCloudIntegration
            listKind: AmazonCloudIntegrationList
            plural: amazoncloudintegrations
            singular: amazoncloudintegration
          scope: Cluster
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                description: AmazonCloudIntegration is the Schema for the amazoncloudintegrations
                  API
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: AmazonCloudIntegrationSpec defines the desired state of AmazonCloudIntegration
                    properties:
                      awsRegion:
                        description: AWSRegion is the region in which your cluster is located.
                        type: string
                      defaultPodMetadataAccess:
                        description: 'DefaultPodMetadataAccess defines what the default behavior
                          will be for accessing the AWS metadata service from a pod. Default:
                          Denied'
                        enum:
                        - Allowed
                        - Denied
                        type: string
                      enforcedSecurityGroupID:
                        description: EnforcedSecurityGroupID is the ID of the Security Group
                          which will be applied to all ENIs that are on a host that is also
                          part of the Kubernetes cluster.
                        type: string
                      nodeSecurityGroupIDs:
                        description: NodeSecurityGroupIDs is a list of Security Group IDs
                          that all nodes and masters will be in.
                        items:
                          type: string
                        type: array
                      podSecurityGroupID:
                        description: PodSecurityGroupID is the ID of the Security Group which
                          all pods should be placed in by default.
                        type: string
                      sqsURL:
                        description: SQSURL is the SQS URL needed to access the Simple Queue
                          Service.
                        type: string
                      trustEnforcedSecurityGroupID:
                        description: TrustEnforcedSecurityGroupID is the ID of the Security
                          Group which will be applied to all ENIs in the VPC.
                        type: string
                      vpcs:
                        description: VPCS is a list of VPC IDs to monitor for ENIs and Security
                          Groups, only one is supported.
                        items:
                          type: string
                        type: array
                    required:
                    - trustEnforcedSecurityGroupID
                    type: object
                  status:
                    description: AmazonCloudIntegrationStatus defines the observed state of
                      AmazonCloudIntegration
                    properties:
                      state:
                        description: State provides user-readable status.
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
          - name: v1beta1
            schema:
              openAPIV3Schema:
                description: AmazonCloudIntegration is the Schema for the amazoncloudintegrations
                  API
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: AmazonCloudIntegrationSpec defines the desired state of AmazonCloudIntegration
                    type: object
                  status:
                    description: AmazonCloudIntegrationStatus defines the observed state of
                      AmazonCloudIntegration
                    type: object
                type: object
            served: false
            storage: false
            subresources:
              status: {}

  APIServersCRD:
    Type: "Custom::KubeManifest"
    Condition: IsEnterprise
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: apiservers.operator.tigera.io
          annotations:
            helm.sh/hook: crd-install
        spec:
          group: operator.tigera.io
          names:
            kind: APIServer
            listKind: APIServerList
            plural: apiservers
            singular: apiserver
          scope: Cluster
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                description: APIServer installs the Tigera API server and related resources.
                  At most one instance of this resource is supported. It must be named "tigera-secure".
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: Specification of the desired state for the Tigera API server.
                    type: object
                  status:
                    description: Most recently observed status for the Tigera API server.
                    properties:
                      state:
                        description: State provides user-readable status.
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}

  AuthenticationsCRD:
    Type: "Custom::KubeManifest"
    Condition: IsEnterprise
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: authentications.operator.tigera.io
          annotations:
            helm.sh/hook: crd-install
        spec:
          group: operator.tigera.io
          names:
            kind: Authentication
            listKind: AuthenticationList
            plural: authentications
            singular: authentication
          scope: Cluster
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                description: Authentication is the Schema for the authentications API
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: AuthenticationSpec defines the desired state of Authentication
                    properties:
                      managerDomain:
                        description: ManagerDomain is the domain name of the Manager
                        type: string
                      method:
                        description: 'Method configures the method of authentication used
                          by Kibana. Default: Basic'
                        enum:
                        - Basic
                        - OIDC
                        type: string
                      oidc:
                        description: OIDC contains the configuration needed to setup OIDC
                          authentication. If the method is OIDC then this is required, if
                          the method is not OIDC then this must not be specified.
                        properties:
                          groupsClaim:
                            description: GroupsClaim specifies which claim to use from the
                              OIDC provider as the group.
                            type: string
                          groupsPrefix:
                            description: If specified, GroupsPrefix is prepended to each group
                              obtained from the claims specified by GroupsClaim. Note that
                              Kibana does not support a groups prefix, so this prefix is removed
                              from Kubernetes Groups when translating log access ClusterRoleBindings
                              into Elastic.
                            type: string
                          issuerURL:
                            description: IssuerURL is the URL to the OIDC provider.
                            type: string
                          requestedScopes:
                            description: RequestedScopes is a list of scopes to request from
                              the OIDC provider. If not provided, all the available scopes
                              are requested.
                            items:
                              type: string
                            type: array
                          usernameClaim:
                            description: UsernameClaim specifies which claim to use from the
                              OIDC provider as the username.
                            type: string
                          usernamePrefix:
                            description: If specified, UsernamePrefix is prepended to each
                              user obtained from the claims specified by UsernameClaim. Note
                              that Kibana does not support a user prefix, so this prefix is
                              removed from Kubernetes User when translating log access ClusterRoleBindings
                              into Elastic.
                            type: string
                        required:
                        - issuerURL
                        - usernameClaim
                        type: object
                    type: object
                  status:
                    description: AuthenticationStatus defines the observed state of Authentication
                    properties:
                      state:
                        description: State provides user-readable status.
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}

  ComplianceCRD:
    Type: "Custom::KubeManifest"
    Condition: IsEnterprise
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: compliances.operator.tigera.io
          annotations:
            helm.sh/hook: crd-install
        spec:
          group: operator.tigera.io
          names:
            kind: Compliance
            listKind: ComplianceList
            plural: compliances
            singular: compliance
          scope: Cluster
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                description: Compliance installs the components required for Tigera compliance
                  reporting. At most one instance of this resource is supported. It must be
                  named "tigera-secure".
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: Specification of the desired state for Tigera compliance
                      reporting.
                    type: object
                  status:
                    description: Most recently observed state for Tigera compliance reporting.
                    properties:
                      state:
                        description: State provides user-readable status.
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}

  IntrustionDetectionCRD:
    Type: "Custom::KubeManifest"
    Condition: IsEnterprise
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: intrusiondetections.operator.tigera.io
          annotations:
            helm.sh/hook: crd-install
        spec:
          group: operator.tigera.io
          names:
            kind: IntrusionDetection
            listKind: IntrusionDetectionList
            plural: intrusiondetections
            singular: intrusiondetection
          scope: Cluster
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                description: IntrusionDetection installs the components required for Tigera
                  intrusion detection. At most one instance of this resource is supported.
                  It must be named "tigera-secure".
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: Specification of the desired state for Tigera intrusion detection.
                    type: object
                  status:
                    description: Most recently observed state for Tigera intrusion detection.
                    properties:
                      state:
                        description: State provides user-readable status.
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}

  LogCollectorCRD:
    Type: "Custom::KubeManifest"
    Condition: IsEnterprise
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: logcollectors.operator.tigera.io
          annotations:
            helm.sh/hook: crd-install
        spec:
          group: operator.tigera.io
          names:
            kind: LogCollector
            listKind: LogCollectorList
            plural: logcollectors
            singular: logcollector
          scope: Cluster
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                description: LogCollector installs the components required for Tigera flow
                  and DNS log collection. At most one instance of this resource is supported.
                  It must be named "tigera-secure". When created, this installs fluentd on
                  all nodes configured to collect Tigera log data and export it to Tigera's
                  Elasticsearch cluster as well as any additionally configured destinations.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: Specification of the desired state for Tigera log collection.
                    properties:
                      additionalSources:
                        description: Configuration for importing audit logs from managed kubernetes
                          cluster log sources.
                        properties:
                          eksCloudwatchLog:
                            description: If specified with EKS Provider in Installation, enables
                              fetching EKS audit logs.
                            properties:
                              fetchInterval:
                                description: 'Cloudwatch audit logs fetching interval in seconds.
                                  Default: 60'
                                format: int32
                                type: integer
                              groupName:
                                description: Cloudwatch log-group name containing EKS audit
                                  logs.
                                type: string
                              region:
                                description: AWS Region EKS cluster is hosted in.
                                type: string
                              streamPrefix:
                                description: 'Prefix of Cloudwatch log stream containing EKS
                                  audit logs in the log-group. Default: kube-apiserver-audit-'
                                type: string
                            required:
                            - groupName
                            - region
                            type: object
                        type: object
                      additionalStores:
                        description: Configuration for exporting flow, audit, and DNS logs
                          to external storage.
                        properties:
                          s3:
                            description: If specified, enables exporting of flow, audit, and
                              DNS logs to Amazon S3 storage.
                            properties:
                              bucketName:
                                description: Name of the S3 bucket to send logs
                                type: string
                              bucketPath:
                                description: Path in the S3 bucket where to send logs
                                type: string
                              region:
                                description: AWS Region of the S3 bucket
                                type: string
                            required:
                            - bucketName
                            - bucketPath
                            - region
                            type: object
                          splunk:
                            description: If specified, enables exporting of flow, audit, and
                              DNS logs to splunk.
                            properties:
                              endpoint:
                                description: Location for splunk's http event collector end
                                  point. example https://1.2.3.4:8088
                                type: string
                            required:
                            - endpoint
                            type: object
                          syslog:
                            description: If specified, enables exporting of flow, audit, and
                              DNS logs to syslog.
                            properties:
                              endpoint:
                                description: 'Location of the syslog server. example: tcp://1.2.3.4:601'
                                type: string
                              packetSize:
                                description: 'PacketSize defines the maximum size of packets
                                  to send to syslog. In general this is only needed if you
                                  notice long logs being truncated. Default: 1024'
                                format: int32
                                type: integer
                            required:
                            - endpoint
                            type: object
                        type: object
                    type: object
                  status:
                    description: Most recently observed state for Tigera log collection.
                    properties:
                      state:
                        description: State provides user-readable status.
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}

  LogStorageCRD:
    Type: "Custom::KubeManifest"
    Condition: IsEnterprise
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: logstorages.operator.tigera.io
          annotations:
            helm.sh/hook: crd-install
        spec:
          group: operator.tigera.io
          names:
            kind: LogStorage
            listKind: LogStorageList
            plural: logstorages
            singular: logstorage
          scope: Cluster
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                description: LogStorage installs the components required for Tigera flow and
                  DNS log storage. At most one instance of this resource is supported. It
                  must be named "tigera-secure". When created, this installs an Elasticsearch
                  cluster for use by Calico Enterprise.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: Specification of the desired state for Tigera log storage.
                    properties:
                      dataNodeSelector:
                        additionalProperties:
                          type: string
                        description: DataNodeSelector gives you more control over the node
                          that Elasticsearch will run on. The contents of DataNodeSelector
                          will be added to the PodSpec of the Elasticsearch nodes. For the
                          pod to be eligible to run on a node, the node must have each of
                          the indicated key-value pairs as labels as well as access to the
                          specified StorageClassName.
                        type: object
                      indices:
                        description: Index defines the configuration for the indices in the
                          Elasticsearch cluster.
                        properties:
                          replicas:
                            description: Replicas defines how many replicas each index will
                              have. See https://www.elastic.co/guide/en/elasticsearch/reference/current/scalability.html
                            format: int32
                            type: integer
                        type: object
                      nodes:
                        description: Nodes defines the configuration for a set of identical
                          Elasticsearch cluster nodes, each of type master, data, and ingest.
                        properties:
                          count:
                            description: Count defines the number of nodes in the Elasticsearch
                              cluster.
                            format: int64
                            type: integer
                          nodeSets:
                            description: NodeSets defines configuration specific to each Elasticsearch
                              Node Set
                            items:
                              description: NodeSets defines configuration specific to each
                                Elasticsearch Node Set
                              properties:
                                selectionAttributes:
                                  description: SelectionAttributes defines K8s node attributes
                                    a NodeSet should use when setting the Node Affinity selectors
                                    and Elasticsearch cluster awareness attributes for the
                                    Elasticsearch nodes. The list of SelectionAttributes are
                                    used to define Node Affinities and set the node awareness
                                    configuration in the running Elasticsearch instance.
                                  items:
                                    description: NodeSetSelectionAttribute defines a K8s node
                                      "attribute" the Elasticsearch nodes should be aware
                                      of. The "Name" and "Value" are used together to set
                                      the "awareness" attributes in Elasticsearch, while the
                                      "NodeLabel" and "Value" are used together to define
                                      Node Affinity for the Pods created for the Elasticsearch
                                      nodes.
                                    properties:
                                      name:
                                        type: string
                                      nodeLabel:
                                        type: string
                                      value:
                                        type: string
                                    required:
                                    - name
                                    - nodeLabel
                                    - value
                                    type: object
                                  type: array
                              type: object
                            type: array
                          resourceRequirements:
                            description: ResourceRequirements defines the resource limits
                              and requirements for the Elasticsearch cluster.
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount of compute
                                  resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount of compute
                                  resources required. If Requests is omitted for a container,
                                  it defaults to Limits if that is explicitly specified, otherwise
                                  to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                type: object
                            type: object
                        type: object
                      retention:
                        description: Retention defines how long data is retained in the Elasticsearch
                          cluster before it is cleared.
                        properties:
                          auditReports:
                            description: 'AuditReports configures the retention period for
                              audit logs, in days.  Logs written on a day that started at
                              least this long ago are removed.  To keep logs for at least
                              x days, use a retention period of x+1. Default: 91'
                            format: int32
                            type: integer
                          complianceReports:
                            description: 'ComplianceReports configures the retention period
                              for compliance reports, in days. Reports are output from the
                              analysis of the system state and audit events for compliance
                              reporting. Consult the Compliance Reporting documentation for
                              more details on reports. Logs written on a day that started
                              at least this long ago are removed.  To keep logs for at least
                              x days, use a retention period of x+1. Default: 91'
                            format: int32
                            type: integer
                          flows:
                            description: 'Flows configures the retention period for flow logs,
                              in days.  Logs written on a day that started at least this long
                              ago are removed.  To keep logs for at least x days, use a retention
                              period of x+1. Default: 8'
                            format: int32
                            type: integer
                          snapshots:
                            description: 'Snapshots configures the retention period for snapshots,
                              in days. Snapshots are periodic captures of resources which
                              along with audit events are used to generate reports. Consult
                              the Compliance Reporting documentation for more details on snapshots.
                              Logs written on a day that started at least this long ago are
                              removed.  To keep logs for at least x days, use a retention
                              period of x+1. Default: 91'
                            format: int32
                            type: integer
                        type: object
                      storageClassName:
                        description: 'StorageClassName will populate the PersistentVolumeClaim.StorageClassName
                          that is used to provision disks to the Tigera Elasticsearch cluster.
                          The StorageClassName should only be modified when no LogStorage
                          is currently active. We recommend choosing a storage class dedicated
                          to Tigera LogStorage only. Otherwise, data retention cannot be guaranteed
                          during upgrades. See https://docs.tigera.io/maintenance/upgrading
                          for up-to-date instructions. Default: tigera-elasticsearch'
                        type: string
                    type: object
                  status:
                    description: Most recently observed state for Tigera log storage.
                    properties:
                      elasticsearchHash:
                        description: ElasticsearchHash represents the current revision and
                          configuration of the installed Elasticsearch cluster. This is an
                          opaque string which can be monitored for changes to perform actions
                          when Elasticsearch is modified.
                        type: string
                      kibanaHash:
                        description: KibanaHash represents the current revision and configuration
                          of the installed Kibana dashboard. This is an opaque string which
                          can be monitored for changes to perform actions when Kibana is modified.
                        type: string
                      state:
                        description: State provides user-readable status.
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}

  ManagementClusterConnectionCRD:
    Type: "Custom::KubeManifest"
    Condition: IsEnterprise
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: managementclusterconnections.operator.tigera.io
          annotations:
            helm.sh/hook: crd-install
        spec:
          group: operator.tigera.io
          names:
            kind: ManagementClusterConnection
            listKind: ManagementClusterConnectionList
            plural: managementclusterconnections
            singular: managementclusterconnection
          scope: Cluster
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                description: ManagementClusterConnection represents a link between a managed
                  cluster and a management cluster. At most one instance of this resource
                  is supported. It must be named "tigera-secure".
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: ManagementClusterConnectionSpec defines the desired state
                      of ManagementClusterConnection
                    properties:
                      managementClusterAddr:
                        description: 'Specify where the managed cluster can reach the management
                          cluster. Ex.: "10.128.0.10:30449". A managed cluster should be able
                          to access this address. This field is used by managed clusters only.'
                        type: string
                    type: object
                type: object
            served: true
            storage: true

  ManagementClusterCRD:
    Type: "Custom::KubeManifest"
    Condition: IsEnterprise
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: managementclusters.operator.tigera.io
          annotations:
            helm.sh/hook: crd-install
        spec:
          group: operator.tigera.io
          names:
            kind: ManagementCluster
            listKind: ManagementClusterList
            plural: managementclusters
            singular: managementcluster
          scope: Cluster
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                description: The presence of ManagementCluster in your cluster, will configure
                  it to be the management plane to which managed clusters can connect. At
                  most one instance of this resource is supported. It must be named "tigera-secure".
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: ManagementClusterSpec defines the desired state of a ManagementCluster
                    properties:
                      address:
                        description: 'This field specifies the externally reachable address
                          to which your managed cluster will connect. When a managed cluster
                          is added, this field is used to populate an easy-to-apply manifest
                          that will connect both clusters. Valid examples are: "0.0.0.0:31000",
                          "example.com:32000", "[::1]:32500"'
                        type: string
                    type: object
                type: object
            served: true
            storage: true

  ManagerCRD:
    Type: "Custom::KubeManifest"
    Condition: IsEnterprise
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: managers.operator.tigera.io
          annotations:
            helm.sh/hook: crd-install
        spec:
          group: operator.tigera.io
          names:
            kind: Manager
            listKind: ManagerList
            plural: managers
            singular: manager
          scope: Cluster
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                description: Manager installs the Calico Enterprise manager graphical user
                  interface. At most one instance of this resource is supported. It must be
                  named "tigera-secure".
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: Specification of the desired state for the Calico Enterprise
                      manager.
                    properties:
                      auth:
                        description: Auth defines the authentication strategy for the Calico
                          Enterprise manager GUI.
                        properties:
                          authority:
                            description: Authority configures the OAuth2/OIDC authority/issuer
                              when using OAuth2 or OIDC login.
                            type: string
                          clientID:
                            description: ClientId configures the OAuth2/OIDC client ID to
                              use for OAuth2 or OIDC login.
                            type: string
                          type:
                            description: 'Type configures the type of authentication used
                              by the manager. Default: Token'
                            enum:
                            - Token
                            - Basic
                            - OIDC
                            - OAuth
                            type: string
                        type: object
                    type: object
                  status:
                    description: Most recently observed state for the Calico Enterprise manager.
                    properties:
                      auth:
                        description: The last successfully applied authentication configuration.
                        properties:
                          authority:
                            description: Authority configures the OAuth2/OIDC authority/issuer
                              when using OAuth2 or OIDC login.
                            type: string
                          clientID:
                            description: ClientId configures the OAuth2/OIDC client ID to
                              use for OAuth2 or OIDC login.
                            type: string
                          type:
                            description: 'Type configures the type of authentication used
                              by the manager. Default: Token'
                            enum:
                            - Token
                            - Basic
                            - OIDC
                            - OAuth
                            type: string
                        type: object
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}

  #####################################################################################
  # elasticsearch.k8s.elastic.co CRDs
  #####################################################################################
  ElasticsearchCRD:
    Type: "Custom::KubeManifest"
    Condition: IsEnterprise
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apiextensions.k8s.io/v1beta1
        kind: CustomResourceDefinition
        metadata:
          name: elasticsearches.elasticsearch.k8s.elastic.co
          annotations:
            "helm.sh/hook": "crd-install"
        spec:
          additionalPrinterColumns:
            - JSONPath: .status.health
              name: health
              type: string
            - JSONPath: .status.availableNodes
              description: Available nodes
              name: nodes
              type: integer
            - JSONPath: .spec.version
              description: Elasticsearch version
              name: version
              type: string
            - JSONPath: .status.phase
              name: phase
              type: string
            - JSONPath: .metadata.creationTimestamp
              name: age
              type: date
          group: elasticsearch.k8s.elastic.co
          names:
            categories:
              - elastic
            kind: Elasticsearch
            listKind: ElasticsearchList
            plural: elasticsearches
            shortNames:
              - es
            singular: elasticsearch
          scope: Namespaced
          subresources:
            status: {}
          validation:
            openAPIV3Schema:
              description: Elasticsearch represents an Elasticsearch resource in a Kubernetes
                cluster.
              properties:
                apiVersion:
                  description: 'APIVersion defines the versioned schema of this representation
                    of an object. Servers should convert recognized schemas to the latest
                    internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                  type: string
                kind:
                  description: 'Kind is a string value representing the REST resource this
                    object represents. Servers may infer this from the endpoint the client
                    submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                metadata:
                  type: object
                spec:
                  description: ElasticsearchSpec holds the specification of an Elasticsearch
                    cluster.
                  properties:
                    http:
                      description: HTTP holds HTTP layer settings for Elasticsearch.
                      properties:
                        service:
                          description: Service defines the template for the associated Kubernetes
                            Service object.
                          properties:
                            metadata:
                              description: ObjectMeta is the metadata of the service. The
                                name and namespace provided here are managed by ECK and will
                                be ignored.
                              type: object
                            spec:
                              description: Spec is the specification of the service.
                              properties:
                                clusterIP:
                                  description: 'clusterIP is the IP address of the service
                                    and is usually assigned randomly by the master. If an
                                    address is specified manually and is not in use by others,
                                    it will be allocated to the service; otherwise, creation
                                    of the service will fail. This field can not be changed
                                    through updates. Valid values are "None", empty string
                                    (""), or a valid IP address. "None" can be specified for
                                    headless services when proxying is not required. Only
                                    applies to types ClusterIP, NodePort, and LoadBalancer.
                                    Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
                                  type: string
                                externalIPs:
                                  description: externalIPs is a list of IP addresses for which
                                    nodes in the cluster will also accept traffic for this
                                    service.  These IPs are not managed by Kubernetes.  The
                                    user is responsible for ensuring that traffic arrives
                                    at a node with this IP.  A common example is external
                                    load-balancers that are not part of the Kubernetes system.
                                  items:
                                    type: string
                                  type: array
                                externalName:
                                  description: externalName is the external reference that
                                    kubedns or equivalent will return as a CNAME record for
                                    this service. No proxying will be involved. Must be a
                                    valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123)
                                    and requires Type to be ExternalName.
                                  type: string
                                externalTrafficPolicy:
                                  description: externalTrafficPolicy denotes if this Service
                                    desires to route external traffic to node-local or cluster-wide
                                    endpoints. "Local" preserves the client source IP and
                                    avoids a second hop for LoadBalancer and Nodeport type
                                    services, but risks potentially imbalanced traffic spreading.
                                    "Cluster" obscures the client source IP and may cause
                                    a second hop to another node, but should have good overall
                                    load-spreading.
                                  type: string
                                healthCheckNodePort:
                                  description: healthCheckNodePort specifies the healthcheck
                                    nodePort for the service. If not specified, HealthCheckNodePort
                                    is created by the service api backend with the allocated
                                    nodePort. Will use user-specified nodePort value if specified
                                    by the client. Only effects when Type is set to LoadBalancer
                                    and ExternalTrafficPolicy is set to Local.
                                  format: int32
                                  type: integer
                                ipFamily:
                                  description: ipFamily specifies whether this Service has
                                    a preference for a particular IP family (e.g. IPv4 vs.
                                    IPv6).  If a specific IP family is requested, the clusterIP
                                    field will be allocated from that family, if it is available
                                    in the cluster.  If no IP family is requested, the cluster's
                                    primary IP family will be used. Other IP fields (loadBalancerIP,
                                    loadBalancerSourceRanges, externalIPs) and controllers
                                    which allocate external load-balancers should use the
                                    same IP family.  Endpoints for this Service will be of
                                    this family.  This field is immutable after creation.
                                    Assigning a ServiceIPFamily not available in the cluster
                                    (e.g. IPv6 in IPv4 only cluster) is an error condition
                                    and will fail during clusterIP assignment.
                                  type: string
                                loadBalancerIP:
                                  description: 'Only applies to Service Type: LoadBalancer
                                    LoadBalancer will get created with the IP specified in
                                    this field. This feature depends on whether the underlying
                                    cloud-provider supports specifying the loadBalancerIP
                                    when a load balancer is created. This field will be ignored
                                    if the cloud-provider does not support the feature.'
                                  type: string
                                loadBalancerSourceRanges:
                                  description: 'If specified and supported by the platform,
                                    this will restrict traffic through the cloud-provider
                                    load-balancer will be restricted to the specified client
                                    IPs. This field will be ignored if the cloud-provider
                                    does not support the feature." More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/'
                                  items:
                                    type: string
                                  type: array
                                ports:
                                  description: 'The list of ports that are exposed by this
                                    service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
                                  items:
                                    description: ServicePort contains information on service's
                                      port.
                                    properties:
                                      name:
                                        description: The name of this port within the service.
                                          This must be a DNS_LABEL. All ports within a ServiceSpec
                                          must have unique names. When considering the endpoints
                                          for a Service, this must match the 'name' field
                                          in the EndpointPort. Optional if only one ServicePort
                                          is defined on this service.
                                        type: string
                                      nodePort:
                                        description: 'The port on each node on which this
                                          service is exposed when type=NodePort or LoadBalancer.
                                          Usually assigned by the system. If specified, it
                                          will be allocated to the service if unused or else
                                          creation of the service will fail. Default is to
                                          auto-allocate a port if the ServiceType of this
                                          Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                                        format: int32
                                        type: integer
                                      port:
                                        description: The port that will be exposed by this
                                          service.
                                        format: int32
                                        type: integer
                                      protocol:
                                        description: The IP protocol for this port. Supports
                                          "TCP", "UDP", and "SCTP". Default is TCP.
                                        type: string
                                      targetPort:
                                        anyOf:
                                          - type: string
                                          - type: integer
                                        description: 'Number or name of the port to access
                                          on the pods targeted by the service. Number must
                                          be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                          If this is a string, it will be looked up as a named
                                          port in the target Pod''s container ports. If this
                                          is not specified, the value of the ''port'' field
                                          is used (an identity map). This field is ignored
                                          for services with clusterIP=None, and should be
                                          omitted or set equal to the ''port'' field. More
                                          info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                                    required:
                                      - port
                                    type: object
                                  type: array
                                publishNotReadyAddresses:
                                  description: publishNotReadyAddresses, when set to true,
                                    indicates that DNS implementations must publish the notReadyAddresses
                                    of subsets for the Endpoints associated with the Service.
                                    The default value is false. The primary use case for setting
                                    this field is to use a StatefulSet's Headless Service
                                    to propagate SRV records for its Pods without respect
                                    to their readiness for purpose of peer discovery.
                                  type: boolean
                                selector:
                                  additionalProperties:
                                    type: string
                                  description: 'Route service traffic to pods with label keys
                                    and values matching this selector. If empty or not present,
                                    the service is assumed to have an external process managing
                                    its endpoints, which Kubernetes will not modify. Only
                                    applies to types ClusterIP, NodePort, and LoadBalancer.
                                    Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/'
                                  type: object
                                sessionAffinity:
                                  description: 'Supports "ClientIP" and "None". Used to maintain
                                    session affinity. Enable client IP based session affinity.
                                    Must be ClientIP or None. Defaults to None. More info:
                                    https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
                                  type: string
                                sessionAffinityConfig:
                                  description: sessionAffinityConfig contains the configurations
                                    of session affinity.
                                  properties:
                                    clientIP:
                                      description: clientIP contains the configurations of
                                        Client IP based session affinity.
                                      properties:
                                        timeoutSeconds:
                                          description: timeoutSeconds specifies the seconds
                                            of ClientIP type session sticky time. The value
                                            must be >0 && <=86400(for 1 day) if ServiceAffinity
                                            == "ClientIP". Default value is 10800(for 3 hours).
                                          format: int32
                                          type: integer
                                      type: object
                                  type: object
                                type:
                                  description: 'type determines how the Service is exposed.
                                    Defaults to ClusterIP. Valid options are ExternalName,
                                    ClusterIP, NodePort, and LoadBalancer. "ExternalName"
                                    maps to the specified externalName. "ClusterIP" allocates
                                    a cluster-internal IP address for load-balancing to endpoints.
                                    Endpoints are determined by the selector or if that is
                                    not specified, by manual construction of an Endpoints
                                    object. If clusterIP is "None", no virtual IP is allocated
                                    and the endpoints are published as a set of endpoints
                                    rather than a stable IP. "NodePort" builds on ClusterIP
                                    and allocates a port on every node which routes to the
                                    clusterIP. "LoadBalancer" builds on NodePort and creates
                                    an external load-balancer (if supported in the current
                                    cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types'
                                  type: string
                              type: object
                          type: object
                        tls:
                          description: TLS defines options for configuring TLS for HTTP.
                          properties:
                            certificate:
                              description: "Certificate is a reference to a Kubernetes secret
                                that contains the certificate and private key for enabling
                                TLS. The referenced secret should contain the following: \n
                                - `ca.crt`: The certificate authority (optional). - `tls.crt`:
                                The certificate (or a chain). - `tls.key`: The private key
                                to the first certificate in the certificate chain."
                              properties:
                                secretName:
                                  description: SecretName is the name of the secret.
                                  type: string
                              type: object
                            selfSignedCertificate:
                              description: SelfSignedCertificate allows configuring the self-signed
                                certificate generated by the operator.
                              properties:
                                disabled:
                                  description: Disabled indicates that the provisioning of
                                    the self-signed certifcate should be disabled.
                                  type: boolean
                                subjectAltNames:
                                  description: SubjectAlternativeNames is a list of SANs to
                                    include in the generated HTTP TLS certificate.
                                  items:
                                    description: SubjectAlternativeName represents a SAN entry
                                      in a x509 certificate.
                                    properties:
                                      dns:
                                        description: DNS is the DNS name of the subject.
                                        type: string
                                      ip:
                                        description: IP is the IP address of the subject.
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                      type: object
                    image:
                      description: Image is the Elasticsearch Docker image to deploy.
                      type: string
                    nodeSets:
                      description: 'NodeSets allow specifying groups of Elasticsearch nodes
                        sharing the same configuration and Pod templates. See: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-orchestration.html'
                      items:
                        description: NodeSet is the specification for a group of Elasticsearch
                          nodes sharing the same configuration and a Pod template.
                        properties:
                          config:
                            description: Config holds the Elasticsearch configuration.
                            type: object
                          count:
                            description: Count of Elasticsearch nodes to deploy.
                            format: int32
                            minimum: 1
                            type: integer
                          name:
                            description: Name of this set of nodes. Becomes a part of the
                              Elasticsearch node.name setting.
                            maxLength: 23
                            pattern: '[a-zA-Z0-9-]+'
                            type: string
                          podTemplate:
                            description: PodTemplate provides customisation options (labels,
                              annotations, affinity rules, resource requests, and so on) for
                              the Pods belonging to this NodeSet.
                            type: object
                          volumeClaimTemplates:
                            description: 'VolumeClaimTemplates is a list of persistent volume
                              claims to be used by each Pod in this NodeSet. Every claim in
                              this list must have a matching volumeMount in one of the containers
                              defined in the PodTemplate. Items defined here take precedence
                              over any default claims added by the operator with the same
                              name. See: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-volume-claim-templates.html'
                            items:
                              description: PersistentVolumeClaim is a user's request for and
                                claim to a persistent volume
                              properties:
                                apiVersion:
                                  description: 'APIVersion defines the versioned schema of
                                    this representation of an object. Servers should convert
                                    recognized schemas to the latest internal value, and may
                                    reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                  type: string
                                kind:
                                  description: 'Kind is a string value representing the REST
                                    resource this object represents. Servers may infer this
                                    from the endpoint the client submits requests to. Cannot
                                    be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                metadata:
                                  description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                                  type: object
                                spec:
                                  description: 'Spec defines the desired characteristics of
                                    a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                  properties:
                                    accessModes:
                                      description: 'AccessModes contains the desired access
                                        modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                      items:
                                        type: string
                                      type: array
                                    dataSource:
                                      description: This field requires the VolumeSnapshotDataSource
                                        alpha feature gate to be enabled and currently VolumeSnapshot
                                        is the only supported data source. If the provisioner
                                        can support VolumeSnapshot data source, it will create
                                        a new volume and data will be restored to the volume
                                        at the same time. If the provisioner does not support
                                        VolumeSnapshot data source, volume will not be created
                                        and the failure will be reported as an event. In the
                                        future, we plan to support more data source types
                                        and the behavior of the provisioner may change.
                                      properties:
                                        apiGroup:
                                          description: APIGroup is the group for the resource
                                            being referenced. If APIGroup is not specified,
                                            the specified Kind must be in the core API group.
                                            For any other third-party types, APIGroup is required.
                                          type: string
                                        kind:
                                          description: Kind is the type of resource being
                                            referenced
                                          type: string
                                        name:
                                          description: Name is the name of resource being
                                            referenced
                                          type: string
                                      required:
                                        - kind
                                        - name
                                      type: object
                                    resources:
                                      description: 'Resources represents the minimum resources
                                        the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                      properties:
                                        limits:
                                          additionalProperties:
                                            type: string
                                          description: 'Limits describes the maximum amount
                                            of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                          type: object
                                        requests:
                                          additionalProperties:
                                            type: string
                                          description: 'Requests describes the minimum amount
                                            of compute resources required. If Requests is
                                            omitted for a container, it defaults to Limits
                                            if that is explicitly specified, otherwise to
                                            an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                          type: object
                                      type: object
                                    selector:
                                      description: A label query over volumes to consider
                                        for binding.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label
                                            selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a
                                              selector that contains values, a key, and an
                                              operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the
                                                  selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship
                                                  to a set of values. Valid operators are
                                                  In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string
                                                  values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the
                                                  operator is Exists or DoesNotExist, the
                                                  values array must be empty. This array is
                                                  replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator is "In",
                                            and the values array contains only "value". The
                                            requirements are ANDed.
                                          type: object
                                      type: object
                                    storageClassName:
                                      description: 'Name of the StorageClass required by the
                                        claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                      type: string
                                    volumeMode:
                                      description: volumeMode defines what type of volume
                                        is required by the claim. Value of Filesystem is implied
                                        when not included in claim spec. This is a beta feature.
                                      type: string
                                    volumeName:
                                      description: VolumeName is the binding reference to
                                        the PersistentVolume backing this claim.
                                      type: string
                                  type: object
                                status:
                                  description: 'Status represents the current information/status
                                    of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                  properties:
                                    accessModes:
                                      description: 'AccessModes contains the actual access
                                        modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                      items:
                                        type: string
                                      type: array
                                    capacity:
                                      additionalProperties:
                                        type: string
                                      description: Represents the actual resources of the
                                        underlying volume.
                                      type: object
                                    conditions:
                                      description: Current Condition of persistent volume
                                        claim. If underlying persistent volume is being resized
                                        then the Condition will be set to 'ResizeStarted'.
                                      items:
                                        description: PersistentVolumeClaimCondition contails
                                          details about state of pvc
                                        properties:
                                          lastProbeTime:
                                            description: Last time we probed the condition.
                                            format: date-time
                                            type: string
                                          lastTransitionTime:
                                            description: Last time the condition transitioned
                                              from one status to another.
                                            format: date-time
                                            type: string
                                          message:
                                            description: Human-readable message indicating
                                              details about last transition.
                                            type: string
                                          reason:
                                            description: Unique, this should be a short, machine
                                              understandable string that gives the reason
                                              for condition's last transition. If it reports
                                              "ResizeStarted" that means the underlying persistent
                                              volume is being resized.
                                            type: string
                                          status:
                                            type: string
                                          type:
                                            description: PersistentVolumeClaimConditionType
                                              is a valid value of PersistentVolumeClaimCondition.Type
                                            type: string
                                        required:
                                          - status
                                          - type
                                        type: object
                                      type: array
                                    phase:
                                      description: Phase represents the current phase of PersistentVolumeClaim.
                                      type: string
                                  type: object
                              type: object
                            type: array
                        required:
                          - count
                          - name
                        type: object
                      minItems: 1
                      type: array
                    podDisruptionBudget:
                      description: PodDisruptionBudget provides access to the default pod
                        disruption budget for the Elasticsearch cluster. The default budget
                        selects all cluster pods and sets `maxUnavailable` to 1. To disable,
                        set `PodDisruptionBudget` to the empty value (`{}` in YAML).
                      properties:
                        metadata:
                          description: ObjectMeta is the metadata of the PDB. The name and
                            namespace provided here are managed by ECK and will be ignored.
                          type: object
                        spec:
                          description: Spec is the specification of the PDB.
                          properties:
                            maxUnavailable:
                              anyOf:
                                - type: string
                                - type: integer
                              description: An eviction is allowed if at most "maxUnavailable"
                                pods selected by "selector" are unavailable after the eviction,
                                i.e. even in absence of the evicted pod. For example, one
                                can prevent all voluntary evictions by specifying 0. This
                                is a mutually exclusive setting with "minAvailable".
                            minAvailable:
                              anyOf:
                                - type: string
                                - type: integer
                              description: An eviction is allowed if at least "minAvailable"
                                pods selected by "selector" will still be available after
                                the eviction, i.e. even in the absence of the evicted pod.  So
                                for example you can prevent all voluntary evictions by specifying
                                "100%".
                            selector:
                              description: Label query over pods whose evictions are managed
                                by the disruption budget.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label selector
                                    requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a selector
                                      that contains values, a key, and an operator that relates
                                      the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are In, NotIn,
                                          Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string values.
                                          If the operator is In or NotIn, the values array
                                          must be non-empty. If the operator is Exists or
                                          DoesNotExist, the values array must be empty. This
                                          array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                      - key
                                      - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value} pairs.
                                    A single {key,value} in the matchLabels map is equivalent
                                    to an element of matchExpressions, whose key field is
                                    "key", the operator is "In", and the values array contains
                                    only "value". The requirements are ANDed.
                                  type: object
                              type: object
                          type: object
                      type: object
                    secureSettings:
                      description: 'SecureSettings is a list of references to Kubernetes secrets
                        containing sensitive configuration options for Elasticsearch. See:
                        https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-es-secure-settings.html'
                      items:
                        description: SecretSource defines a data source based on a Kubernetes
                          Secret.
                        properties:
                          entries:
                            description: Entries define how to project each key-value pair
                              in the secret to filesystem paths. If not defined, all keys
                              will be projected to similarly named paths in the filesystem.
                              If defined, only the specified keys will be projected to the
                              corresponding paths.
                            items:
                              description: KeyToPath defines how to map a key in a Secret
                                object to a filesystem path.
                              properties:
                                key:
                                  description: Key is the key contained in the secret.
                                  type: string
                                path:
                                  description: Path is the relative file path to map the key
                                    to. Path must not be an absolute file path and must not
                                    contain any ".." components.
                                  type: string
                              required:
                                - key
                              type: object
                            type: array
                          secretName:
                            description: SecretName is the name of the secret.
                            type: string
                        required:
                          - secretName
                        type: object
                      type: array
                    updateStrategy:
                      description: UpdateStrategy specifies how updates to the cluster should
                        be performed.
                      properties:
                        changeBudget:
                          description: ChangeBudget defines the constraints to consider when
                            applying changes to the Elasticsearch cluster.
                          properties:
                            maxSurge:
                              description: MaxSurge is the maximum number of new pods that
                                can be created exceeding the original number of pods defined
                                in the specification. MaxSurge is only taken into consideration
                                when scaling up. Setting a negative value will disable the
                                restriction. Defaults to unbounded if not specified.
                              format: int32
                              type: integer
                            maxUnavailable:
                              description: MaxUnavailable is the maximum number of pods that
                                can be unavailable (not ready) during the update due to circumstances
                                under the control of the operator. Setting a negative value
                                will disable this restriction. Defaults to 1 if not specified.
                              format: int32
                              type: integer
                          type: object
                      type: object
                    version:
                      description: Version of Elasticsearch.
                      type: string
                  required:
                    - nodeSets
                  type: object
                status:
                  description: ElasticsearchStatus defines the observed state of Elasticsearch
                  properties:
                    availableNodes:
                      format: int32
                      type: integer
                    health:
                      description: ElasticsearchHealth is the health of the cluster as returned
                        by the health API.
                      type: string
                    phase:
                      description: ElasticsearchOrchestrationPhase is the phase Elasticsearch
                        is in from the controller point of view.
                      type: string
                  type: object
          version: v1
          versions:
            - name: v1
              served: true
              storage: true
            - name: v1beta1
              served: true
              storage: false
            - name: v1alpha1
              served: true
              storage: false
        status:
          acceptedNames:
            kind: ""
            plural: ""
          conditions: []
          storedVersions: []

  KibanaCRD:
    Type: "Custom::KubeManifest"
    Condition: IsEnterprise
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apiextensions.k8s.io/v1beta1
        kind: CustomResourceDefinition
        metadata:
          name: kibanas.kibana.k8s.elastic.co
          annotations:
            "helm.sh/hook": "crd-install"
        spec:
          additionalPrinterColumns:
            - JSONPath: .status.health
              name: health
              type: string
            - JSONPath: .status.availableNodes
              description: Available nodes
              name: nodes
              type: integer
            - JSONPath: .spec.version
              description: Kibana version
              name: version
              type: string
            - JSONPath: .metadata.creationTimestamp
              name: age
              type: date
          group: kibana.k8s.elastic.co
          names:
            categories:
              - elastic
            kind: Kibana
            listKind: KibanaList
            plural: kibanas
            shortNames:
              - kb
            singular: kibana
          scope: Namespaced
          subresources:
            status: {}
          validation:
            openAPIV3Schema:
              description: Kibana represents a Kibana resource in a Kubernetes cluster.
              properties:
                apiVersion:
                  description: 'APIVersion defines the versioned schema of this representation
                    of an object. Servers should convert recognized schemas to the latest
                    internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                  type: string
                kind:
                  description: 'Kind is a string value representing the REST resource this
                    object represents. Servers may infer this from the endpoint the client
                    submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                metadata:
                  type: object
                spec:
                  description: KibanaSpec holds the specification of a Kibana instance.
                  properties:
                    config:
                      description: 'Config holds the Kibana configuration. See: https://www.elastic.co/guide/en/kibana/current/settings.html'
                      type: object
                    count:
                      description: Count of Kibana instances to deploy.
                      format: int32
                      type: integer
                    elasticsearchRef:
                      description: ElasticsearchRef is a reference to an Elasticsearch cluster
                        running in the same Kubernetes cluster.
                      properties:
                        name:
                          description: Name of the Kubernetes object.
                          type: string
                        namespace:
                          description: Namespace of the Kubernetes object. If empty, defaults
                            to the current namespace.
                          type: string
                      required:
                        - name
                      type: object
                    http:
                      description: HTTP holds the HTTP layer configuration for Kibana.
                      properties:
                        service:
                          description: Service defines the template for the associated Kubernetes
                            Service object.
                          properties:
                            metadata:
                              description: ObjectMeta is the metadata of the service. The
                                name and namespace provided here are managed by ECK and will
                                be ignored.
                              type: object
                            spec:
                              description: Spec is the specification of the service.
                              properties:
                                clusterIP:
                                  description: 'clusterIP is the IP address of the service
                                    and is usually assigned randomly by the master. If an
                                    address is specified manually and is not in use by others,
                                    it will be allocated to the service; otherwise, creation
                                    of the service will fail. This field can not be changed
                                    through updates. Valid values are "None", empty string
                                    (""), or a valid IP address. "None" can be specified for
                                    headless services when proxying is not required. Only
                                    applies to types ClusterIP, NodePort, and LoadBalancer.
                                    Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
                                  type: string
                                externalIPs:
                                  description: externalIPs is a list of IP addresses for which
                                    nodes in the cluster will also accept traffic for this
                                    service.  These IPs are not managed by Kubernetes.  The
                                    user is responsible for ensuring that traffic arrives
                                    at a node with this IP.  A common example is external
                                    load-balancers that are not part of the Kubernetes system.
                                  items:
                                    type: string
                                  type: array
                                externalName:
                                  description: externalName is the external reference that
                                    kubedns or equivalent will return as a CNAME record for
                                    this service. No proxying will be involved. Must be a
                                    valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123)
                                    and requires Type to be ExternalName.
                                  type: string
                                externalTrafficPolicy:
                                  description: externalTrafficPolicy denotes if this Service
                                    desires to route external traffic to node-local or cluster-wide
                                    endpoints. "Local" preserves the client source IP and
                                    avoids a second hop for LoadBalancer and Nodeport type
                                    services, but risks potentially imbalanced traffic spreading.
                                    "Cluster" obscures the client source IP and may cause
                                    a second hop to another node, but should have good overall
                                    load-spreading.
                                  type: string
                                healthCheckNodePort:
                                  description: healthCheckNodePort specifies the healthcheck
                                    nodePort for the service. If not specified, HealthCheckNodePort
                                    is created by the service api backend with the allocated
                                    nodePort. Will use user-specified nodePort value if specified
                                    by the client. Only effects when Type is set to LoadBalancer
                                    and ExternalTrafficPolicy is set to Local.
                                  format: int32
                                  type: integer
                                ipFamily:
                                  description: ipFamily specifies whether this Service has
                                    a preference for a particular IP family (e.g. IPv4 vs.
                                    IPv6).  If a specific IP family is requested, the clusterIP
                                    field will be allocated from that family, if it is available
                                    in the cluster.  If no IP family is requested, the cluster's
                                    primary IP family will be used. Other IP fields (loadBalancerIP,
                                    loadBalancerSourceRanges, externalIPs) and controllers
                                    which allocate external load-balancers should use the
                                    same IP family.  Endpoints for this Service will be of
                                    this family.  This field is immutable after creation.
                                    Assigning a ServiceIPFamily not available in the cluster
                                    (e.g. IPv6 in IPv4 only cluster) is an error condition
                                    and will fail during clusterIP assignment.
                                  type: string
                                loadBalancerIP:
                                  description: 'Only applies to Service Type: LoadBalancer
                                    LoadBalancer will get created with the IP specified in
                                    this field. This feature depends on whether the underlying
                                    cloud-provider supports specifying the loadBalancerIP
                                    when a load balancer is created. This field will be ignored
                                    if the cloud-provider does not support the feature.'
                                  type: string
                                loadBalancerSourceRanges:
                                  description: 'If specified and supported by the platform,
                                    this will restrict traffic through the cloud-provider
                                    load-balancer will be restricted to the specified client
                                    IPs. This field will be ignored if the cloud-provider
                                    does not support the feature." More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/'
                                  items:
                                    type: string
                                  type: array
                                ports:
                                  description: 'The list of ports that are exposed by this
                                    service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
                                  items:
                                    description: ServicePort contains information on service's
                                      port.
                                    properties:
                                      name:
                                        description: The name of this port within the service.
                                          This must be a DNS_LABEL. All ports within a ServiceSpec
                                          must have unique names. When considering the endpoints
                                          for a Service, this must match the 'name' field
                                          in the EndpointPort. Optional if only one ServicePort
                                          is defined on this service.
                                        type: string
                                      nodePort:
                                        description: 'The port on each node on which this
                                          service is exposed when type=NodePort or LoadBalancer.
                                          Usually assigned by the system. If specified, it
                                          will be allocated to the service if unused or else
                                          creation of the service will fail. Default is to
                                          auto-allocate a port if the ServiceType of this
                                          Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                                        format: int32
                                        type: integer
                                      port:
                                        description: The port that will be exposed by this
                                          service.
                                        format: int32
                                        type: integer
                                      protocol:
                                        description: The IP protocol for this port. Supports
                                          "TCP", "UDP", and "SCTP". Default is TCP.
                                        type: string
                                      targetPort:
                                        anyOf:
                                          - type: string
                                          - type: integer
                                        description: 'Number or name of the port to access
                                          on the pods targeted by the service. Number must
                                          be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                          If this is a string, it will be looked up as a named
                                          port in the target Pod''s container ports. If this
                                          is not specified, the value of the ''port'' field
                                          is used (an identity map). This field is ignored
                                          for services with clusterIP=None, and should be
                                          omitted or set equal to the ''port'' field. More
                                          info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                                    required:
                                      - port
                                    type: object
                                  type: array
                                publishNotReadyAddresses:
                                  description: publishNotReadyAddresses, when set to true,
                                    indicates that DNS implementations must publish the notReadyAddresses
                                    of subsets for the Endpoints associated with the Service.
                                    The default value is false. The primary use case for setting
                                    this field is to use a StatefulSet's Headless Service
                                    to propagate SRV records for its Pods without respect
                                    to their readiness for purpose of peer discovery.
                                  type: boolean
                                selector:
                                  additionalProperties:
                                    type: string
                                  description: 'Route service traffic to pods with label keys
                                    and values matching this selector. If empty or not present,
                                    the service is assumed to have an external process managing
                                    its endpoints, which Kubernetes will not modify. Only
                                    applies to types ClusterIP, NodePort, and LoadBalancer.
                                    Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/'
                                  type: object
                                sessionAffinity:
                                  description: 'Supports "ClientIP" and "None". Used to maintain
                                    session affinity. Enable client IP based session affinity.
                                    Must be ClientIP or None. Defaults to None. More info:
                                    https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
                                  type: string
                                sessionAffinityConfig:
                                  description: sessionAffinityConfig contains the configurations
                                    of session affinity.
                                  properties:
                                    clientIP:
                                      description: clientIP contains the configurations of
                                        Client IP based session affinity.
                                      properties:
                                        timeoutSeconds:
                                          description: timeoutSeconds specifies the seconds
                                            of ClientIP type session sticky time. The value
                                            must be >0 && <=86400(for 1 day) if ServiceAffinity
                                            == "ClientIP". Default value is 10800(for 3 hours).
                                          format: int32
                                          type: integer
                                      type: object
                                  type: object
                                type:
                                  description: 'type determines how the Service is exposed.
                                    Defaults to ClusterIP. Valid options are ExternalName,
                                    ClusterIP, NodePort, and LoadBalancer. "ExternalName"
                                    maps to the specified externalName. "ClusterIP" allocates
                                    a cluster-internal IP address for load-balancing to endpoints.
                                    Endpoints are determined by the selector or if that is
                                    not specified, by manual construction of an Endpoints
                                    object. If clusterIP is "None", no virtual IP is allocated
                                    and the endpoints are published as a set of endpoints
                                    rather than a stable IP. "NodePort" builds on ClusterIP
                                    and allocates a port on every node which routes to the
                                    clusterIP. "LoadBalancer" builds on NodePort and creates
                                    an external load-balancer (if supported in the current
                                    cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types'
                                  type: string
                              type: object
                          type: object
                        tls:
                          description: TLS defines options for configuring TLS for HTTP.
                          properties:
                            certificate:
                              description: "Certificate is a reference to a Kubernetes secret
                                that contains the certificate and private key for enabling
                                TLS. The referenced secret should contain the following: \n
                                - `ca.crt`: The certificate authority (optional). - `tls.crt`:
                                The certificate (or a chain). - `tls.key`: The private key
                                to the first certificate in the certificate chain."
                              properties:
                                secretName:
                                  description: SecretName is the name of the secret.
                                  type: string
                              type: object
                            selfSignedCertificate:
                              description: SelfSignedCertificate allows configuring the self-signed
                                certificate generated by the operator.
                              properties:
                                disabled:
                                  description: Disabled indicates that the provisioning of
                                    the self-signed certifcate should be disabled.
                                  type: boolean
                                subjectAltNames:
                                  description: SubjectAlternativeNames is a list of SANs to
                                    include in the generated HTTP TLS certificate.
                                  items:
                                    description: SubjectAlternativeName represents a SAN entry
                                      in a x509 certificate.
                                    properties:
                                      dns:
                                        description: DNS is the DNS name of the subject.
                                        type: string
                                      ip:
                                        description: IP is the IP address of the subject.
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                      type: object
                    image:
                      description: Image is the Kibana Docker image to deploy.
                      type: string
                    podTemplate:
                      description: PodTemplate provides customisation options (labels, annotations,
                        affinity rules, resource requests, and so on) for the Kibana pods
                      type: object
                    secureSettings:
                      description: 'SecureSettings is a list of references to Kubernetes secrets
                        containing sensitive configuration options for Kibana. See: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-kibana.html#k8s-kibana-secure-settings'
                      items:
                        description: SecretSource defines a data source based on a Kubernetes
                          Secret.
                        properties:
                          entries:
                            description: Entries define how to project each key-value pair
                              in the secret to filesystem paths. If not defined, all keys
                              will be projected to similarly named paths in the filesystem.
                              If defined, only the specified keys will be projected to the
                              corresponding paths.
                            items:
                              description: KeyToPath defines how to map a key in a Secret
                                object to a filesystem path.
                              properties:
                                key:
                                  description: Key is the key contained in the secret.
                                  type: string
                                path:
                                  description: Path is the relative file path to map the key
                                    to. Path must not be an absolute file path and must not
                                    contain any ".." components.
                                  type: string
                              required:
                                - key
                              type: object
                            type: array
                          secretName:
                            description: SecretName is the name of the secret.
                            type: string
                        required:
                          - secretName
                        type: object
                      type: array
                    version:
                      description: Version of Kibana.
                      type: string
                  type: object
                status:
                  description: KibanaStatus defines the observed state of Kibana
                  properties:
                    associationStatus:
                      description: AssociationStatus is the status of an association resource.
                      type: string
                    availableNodes:
                      format: int32
                      type: integer
                    health:
                      description: KibanaHealth expresses the status of the Kibana instances.
                      type: string
                  type: object
          version: v1
          versions:
            - name: v1
              served: true
              storage: true
            - name: v1beta1
              served: true
              storage: false
            - name: v1alpha1
              served: true
              storage: false
        status:
          acceptedNames:
            kind: ""
            plural: ""
          conditions: []
          storedVersions: []

  TrustRelationshipsCRD:
    Type: "Custom::KubeManifest"
    Condition: IsEnterprise
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apiextensions.k8s.io/v1beta1
        kind: CustomResourceDefinition
        metadata:
          labels:
            controller-tools.k8s.io: "1.0"
          name: trustrelationships.elasticsearch.k8s.elastic.co
          annotations:
            "helm.sh/hook": "crd-install"
        spec:
          group: elasticsearch.k8s.elastic.co
          names:
            kind: TrustRelationship
            plural: trustrelationships
          scope: Namespaced
          validation:
            openAPIV3Schema:
              properties:
                apiVersion:
                  description: 'APIVersion defines the versioned schema of this representation
                    of an object. Servers should convert recognized schemas to the latest
                    internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                  type: string
                kind:
                  description: 'Kind is a string value representing the REST resource this
                    object represents. Servers may infer this from the endpoint the client
                    submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                metadata:
                  type: object
                spec:
                  properties:
                    caCert:
                      description: CaCert contains the PEM-encoded CA certificate for the
                        remote cluster.
                      type: string
                  type: object
          version: v1alpha1
        status:
          acceptedNames:
            kind: ""
            plural: ""
          conditions: []
          storedVersions: []

  #####################################################################################
  # Resources which install the operator
  #####################################################################################
  TigeraOperatorClusterRole:
    Type: "Custom::KubeManifest"
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          name: tigera-operator
        rules:
          - apiGroups:
              - ""
            resources:
              - namespaces
              - pods
              - podtemplates
              - services
              - endpoints
              - events
              - configmaps
              - secrets
              - serviceaccounts
            verbs:
              - '*'
          - apiGroups:
              - ""
            resources:
              - nodes
            verbs:
              # Need to update node labels when migrating nodes.
              - 'get'
              - 'patch'
              - 'list'
              # We need this for Typha autoscaling
              - 'watch'
          - apiGroups:
              - rbac.authorization.k8s.io
            resources:
              - clusterroles
              - clusterrolebindings
              - rolebindings
              - roles
            verbs:
              - '*'
          - apiGroups:
              - apps
            resources:
              - deployments
              - daemonsets
              - statefulsets
            verbs:
              - '*'
          - apiGroups:
              - apiextensions.k8s.io
            resources:
              - customresourcedefinitions
            verbs:
              - '*'
          - apiGroups:
              - apps
            resourceNames:
              - tigera-operator
            resources:
              - deployments/finalizers
            verbs:
              - update
          - apiGroups:
              - operator.tigera.io
            resources:
              - '*'
            verbs:
              - '*'
          - apiGroups:
              - scheduling.k8s.io
            resources:
              - priorityclasses
            verbs:
              - '*'
          - apiGroups:
              - monitoring.coreos.com
            resources:
              - servicemonitors
            verbs:
              - get
              - create
          - apiGroups:
            - policy
            resources:
            - poddisruptionbudgets
            verbs:
            - '*'
          # Add the appropriate pod security policy permissions
          - apiGroups:
              - policy
            resources:
              - podsecuritypolicies
            resourceNames:
              - tigera-operator
            verbs:
              - use
          - apiGroups:
              - policy
            resources:
              - podsecuritypolicies
            verbs:
              - get
              - list
              - watch
              - create
              - update
            # Permissions below this point are required for TSEE only.
          - apiGroups:
              - apiregistration.k8s.io
            resources:
              - apiservices
            verbs:
              - '*'
          - apiGroups:
              - "batch"
            resources:
              - jobs
              - cronjobs
            verbs:
              - '*'
          - apiGroups:
              - projectcalico.org
            resources:
              - globalreporttypes
              - licensekeys
              - globalalerttemplates
            verbs:
              - '*'
          - apiGroups:
              - elasticsearch.k8s.elastic.co
            resources:
              - elasticsearches
            verbs:
              - '*'
          - apiGroups:
              - storage.k8s.io
            resources:
              - storageclasses
            verbs:
              - '*'
          - apiGroups:
              - kibana.k8s.elastic.co
            resources:
              - kibanas
            verbs:
              - '*'
          - apiGroups:
              - admissionregistration.k8s.io
            resources:
              - validatingwebhookconfigurations
            verbs:
              - '*'

  TigeraOperatorNamespace:
    Type: "Custom::KubeManifest"
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: v1
        kind: Namespace
        metadata:
          name: tigera-operator
          labels:
            name: tigera-operator

  TigeraOperatorServiceAccount:
    Type: "Custom::KubeManifest"
    DependsOn: TigeraOperatorNamespace
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: tigera-operator
          namespace: tigera-operator

  TigeraOperatorClusterRoleBinding:
    Type: "Custom::KubeManifest"
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        kind: ClusterRoleBinding
        apiVersion: rbac.authorization.k8s.io/v1
        metadata:
          name: tigera-operator
        subjects:
        - kind: ServiceAccount
          name: tigera-operator
          namespace: tigera-operator
        roleRef:
          kind: ClusterRole
          name: tigera-operator
          apiGroup: rbac.authorization.k8s.io

  TigeraOperatorDeployment:
    Type: "Custom::KubeManifest"
    DependsOn: TigeraOperatorNamespace
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: tigera-operator
          namespace: tigera-operator
          labels:
            k8s-app: tigera-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: tigera-operator
          template:
            metadata:
              labels:
                name: tigera-operator
                k8s-app: tigera-operator
            spec:
              tolerations:
                - effect: NoExecute
                  operator: Exists
                - effect: NoSchedule
                  operator: Exists
              serviceAccountName: tigera-operator
              hostNetwork: true
              dnsPolicy: ClusterFirstWithHostNet
              containers:
                - name: tigera-operator
                  image: quay.io/tigera/operator:v1.10.5
                  imagePullPolicy: IfNotPresent
                  command:
                    - operator
                  env:
                    - name: WATCH_NAMESPACE
                      value: ""
                    - name: POD_NAME
                      valueFrom:
                        fieldRef:
                          fieldPath: metadata.name
                    - name: OPERATOR_NAME
                      value: "tigera-operator"
                    - name: TIGERA_OPERATOR_INIT_IMAGE_VERSION
                      value: v1.10.5
