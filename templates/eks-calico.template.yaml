AWSTemplateFormatVersion: "2010-09-09"
Description: Deploys Calico NetworkPolicy support for the Amazon VPC CNI plugin on Amazon EKS (qs-1r10ti40r)
Metadata:
  QuickStartDocumentation:
    EntrypointName: "Launch Calico into Amazon EKS Quick Start"
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Configure Calico install
        Parameters:
          - KubeClusterName
          - ProductVariant
      - Label:
          default: Calico Enterprise options
        Parameters:
          - DockerConfigJSONBase64
    ParameterLabels:
      KubeClusterName:
        default: EKS cluster name
      ProductVariant:
        default: Product variant
      DockerConfigJSONBase64:
        default: Image pull secret
Parameters:
  KubeClusterName:
    Type: String
    Description: Name of the EKS cluster in which to deploy Calico.
  ProductVariant:
    Type: String
    Default: Calico
    AllowedValues:
      - Calico
      - CalicoEnterprise
    Description: Whether to install Calico or Calico Enterprise.
  DockerConfigJSONBase64:
    Type: String
    Description: Base64 encoded Docker pull configuration for pulling Calico Enterprise images.

Conditions:
  IsEnterprise: !Equals [ !Ref ProductVariant, CalicoEnterprise ]
  IsNotEnterprise: !Equals [ !Ref ProductVariant, Calico ]

Resources:
  # Install the Calico CRDs.
  CRDStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "https://casey-eks-quickstart.s3.us-east-2.amazonaws.com/eks-calico-crds.template.yaml"
      Parameters:
        KubeClusterName: !Ref KubeClusterName

  # Install Calico Enterprise CRDs.
  EnterpriseCRDStack:
    Type: AWS::CloudFormation::Stack
    Condition: IsEnterprise
    Properties:
      TemplateURL: "https://casey-eks-quickstart.s3.us-east-2.amazonaws.com/eks-calico-enterprise-crds.template.yaml"
      Parameters:
        KubeClusterName: !Ref KubeClusterName

  # Install the Tigera operator.
  OperatorStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "https://casey-eks-quickstart.s3.us-east-2.amazonaws.com/eks-calico-operator.template.yaml"
      Parameters:
        KubeClusterName: !Ref KubeClusterName
        ProductVariant: !Ref ProductVariant

  # Install Calico Enterprise Prometheus stack.
  PrometheusStack:
    Type: AWS::CloudFormation::Stack
    Condition: IsEnterprise
    Properties:
      TemplateURL: "https://casey-eks-quickstart.s3.us-east-2.amazonaws.com/eks-calico-prometheus.template.yaml"
      Parameters:
        KubeClusterName: !Ref KubeClusterName

  # Pull secret required for Calico Enterprise.
  CalicoEnterprisePullSecret:
    Type: "Custom::KubeManifest"
    DependsOn: OperatorStack
    Condition: IsEnterprise
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: v1
        kind: Secret
        metadata:
          name: tigera-pull-secret
          namespace: tigera-operator
        type: kubernetes.io/dockerconfigjson
        data:
          .dockerconfigjson: !Ref DockerConfigJSONBase64

  # If using Calico Enterprise, installs the Calico Enterprise API server.
  DefaultAPIServer:
    Type: "Custom::KubeManifest"
    DependsOn: CRDStack
    Condition: IsEnterprise
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: operator.tigera.io/v1
        kind: APIServer
        metadata:
          name: tigera-secure
        spec: {}

  # Configures the installation.
  DefaultInstallation:
    Type: "Custom::KubeManifest"
    DependsOn: CRDStack
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: operator.tigera.io/v1
        kind: Installation
        metadata:
          name: default
        spec:
          kubernetesProvider: EKS
          variant: !If [IsEnterprise, "TigeraSecureEnterprise", "Calico"]
          imagePullSecrets: !If [IsEnterprise, "[{\"name\": \"tigera-pull-secret\"}]", "[]"]
