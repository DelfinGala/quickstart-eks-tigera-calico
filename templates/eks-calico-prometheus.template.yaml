AWSTemplateFormatVersion: "2010-09-09"
Description: Deploys Calico Enterprise Prometheus components (qs-1r6eslplp)
Metadata:
  QuickStartDocumentation:
    EntrypointName: "Launch Calico Prometheus items"
    Order: 5
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Calico for EKS
        Parameters:
          - KubeClusterName
    ParameterLabels:
      KubeClusterName:
        default: EKS cluster name
Parameters:
  KubeClusterName:
    Type: String
    Description: Name of the EKS cluster in which to deploy Calico.

Resources:
  #####################################################################################
  # Configuration for Calico Enterprise Prometheus and related resources.
  #####################################################################################
  TigeraPrometheusNamespace:
    Type: "Custom::KubeManifest"
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: v1
        kind: Namespace
        metadata:
          name: tigera-prometheus
          labels:
            name: tigera-prometheus

  PrometheusServiceAccount:
    Type: "Custom::KubeManifest"
    DependsOn: TigeraPrometheusNamespace
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: prometheus
          namespace: tigera-prometheus

  PrometheusClusterRole:
    Type: "Custom::KubeManifest"
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          name: prometheus
        rules:
        - apiGroups: [""]
          resources:
          - nodes
          - services
          - endpoints
          - pods
          verbs: ["get", "list", "watch"]
        - apiGroups: [""]
          resources:
          - configmaps
          verbs: ["get"]
        - nonResourceURLs: ["/metrics"]
          verbs: ["get"]

  PrometheusClusterRoleBinding:
    Type: "Custom::KubeManifest"
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: prometheus
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: prometheus
        subjects:
        - kind: ServiceAccount
          name: prometheus
          namespace: tigera-prometheus

  AlertManagerService:
    Type: "Custom::KubeManifest"
    DependsOn: TigeraPrometheusNamespace
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: v1
        kind: Service
        metadata:
          name: calico-node-alertmanager
          namespace: tigera-prometheus
        spec:
          type: ClusterIP
          ports:
          - name: web
            port: 9093
            protocol: TCP
            targetPort: web
          selector:
            alertmanager: calico-node-alertmanager

  AlertManagerSecret:
    Type: "Custom::KubeManifest"
    DependsOn: TigeraPrometheusNamespace
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: v1
        kind: Secret
        metadata:
          name: alertmanager-calico-node-alertmanager
          namespace: tigera-prometheus
        data:
          alertmanager.yaml: Z2xvYmFsOgogIHJlc29sdmVfdGltZW91dDogNW0Kcm91dGU6CiAgZ3JvdXBfYnk6IFsnam9iJ10KICBncm91cF93YWl0OiAzMHMKICBncm91cF9pbnRlcnZhbDogMW0KICByZXBlYXRfaW50ZXJ2YWw6IDVtCiAgcmVjZWl2ZXI6ICd3ZWJob29rJwpyZWNlaXZlcnM6Ci0gbmFtZTogJ3dlYmhvb2snCiAgd2ViaG9va19jb25maWdzOgogIC0gdXJsOiAnaHR0cDovL2NhbGljby1hbGVydG1hbmFnZXItd2ViaG9vazozMDUwMS8nCg==

  CalicoNodePrometheusService:
    Type: "Custom::KubeManifest"
    DependsOn: TigeraPrometheusNamespace
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeManifest-${KubeClusterName}"
      ClusterName: !Ref KubeClusterName
      Manifest:
        apiVersion: v1
        kind: Service
        metadata:
          name: calico-node-prometheus
          namespace: tigera-prometheus
        spec:
          type: ClusterIP
          ports:
          - name: web
            port: 9090
            protocol: TCP
            targetPort: web
          selector:
            prometheus: calico-node-prometheus
